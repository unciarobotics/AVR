
EdgeAvoider.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015d6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010c  00800060  000015d6  0000164a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 000001a0  00000000  00000000  00001756  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000001f8  00000000  00000000  000018f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00002a8f  00000000  00000000  00001aee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000125c  00000000  00000000  0000457d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000018f6  00000000  00000000  000057d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001c0  00000000  00000000  000070d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000034e  00000000  00000000  00007290  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000165c  00000000  00000000  000075de  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000098  00000000  00000000  00008c3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
       4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
       6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
       8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
       a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
       c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
       e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
      10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
      12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
      14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
      16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
      18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
      1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
      1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
      1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
      20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
      22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
      24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	11 e0       	ldi	r17, 0x01	; 1
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	e6 ed       	ldi	r30, 0xD6	; 214
      3a:	f5 e1       	ldi	r31, 0x15	; 21
      3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
      42:	ac 36       	cpi	r26, 0x6C	; 108
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>
      48:	02 d0       	rcall	.+4      	; 0x4e <main>
      4a:	c3 ca       	rjmp	.-2682   	; 0xfffff5d2 <__eeprom_end+0xff7ef5d2>

0000004c <__bad_interrupt>:
      4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <main>:
#include<avr/io.h>
#include<util/delay.h>
int b=90000;
int t=90000;
void main()
{DDRB=0b11111111;
      4e:	2f 92       	push	r2
      50:	3f 92       	push	r3
      52:	4f 92       	push	r4
      54:	5f 92       	push	r5
      56:	6f 92       	push	r6
      58:	7f 92       	push	r7
      5a:	8f 92       	push	r8
      5c:	9f 92       	push	r9
      5e:	af 92       	push	r10
      60:	bf 92       	push	r11
      62:	cf 92       	push	r12
      64:	df 92       	push	r13
      66:	ef 92       	push	r14
      68:	ff 92       	push	r15
      6a:	0f 93       	push	r16
      6c:	1f 93       	push	r17
      6e:	cf 93       	push	r28
      70:	df 93       	push	r29
      72:	8f ef       	ldi	r24, 0xFF	; 255
      74:	87 bb       	out	0x17, r24	; 23
 DDRC=0b0000000;
      76:	14 ba       	out	0x14, r1	; 20
  }
  
  if(x==0b0000000)
  {
   PORTB=0b00001010;
   _delay_ms(b);_delay_ms(b);_delay_ms(b);_delay_ms(b);
      78:	80 91 60 00 	lds	r24, 0x0060
      7c:	90 91 61 00 	lds	r25, 0x0061
   PORTB=0b00010000;
    _delay_ms(t);_delay_ms(t);_delay_ms(t);_delay_ms(t);
      80:	20 91 62 00 	lds	r18, 0x0062
      84:	30 91 63 00 	lds	r19, 0x0063
  }
  
  if(x==0b0000000)
  {
   PORTB=0b00001010;
   _delay_ms(b);_delay_ms(b);_delay_ms(b);_delay_ms(b);
      88:	3c 01       	movw	r6, r24
      8a:	88 24       	eor	r8, r8
      8c:	77 fc       	sbrc	r7, 7
      8e:	80 94       	com	r8
      90:	98 2c       	mov	r9, r8
   PORTB=0b00010000;
    _delay_ms(t);_delay_ms(t);_delay_ms(t);_delay_ms(t);
      92:	19 01       	movw	r2, r18
      94:	44 24       	eor	r4, r4
      96:	37 fc       	sbrc	r3, 7
      98:	40 94       	com	r4
      9a:	54 2c       	mov	r5, r4
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      9c:	c9 e1       	ldi	r28, 0x19	; 25
      9e:	d0 e0       	ldi	r29, 0x00	; 0
int t=90000;
void main()
{DDRB=0b11111111;
 DDRC=0b0000000;
 while(1)
 {int x = PINC&0b0001001;
      a0:	83 b3       	in	r24, 0x13	; 19
      a2:	90 e0       	ldi	r25, 0x00	; 0
      a4:	89 70       	andi	r24, 0x09	; 9
      a6:	90 70       	andi	r25, 0x00	; 0
  if(x==0b0001001) {PORTB=0b00010100;}
      a8:	89 30       	cpi	r24, 0x09	; 9
      aa:	91 05       	cpc	r25, r1
      ac:	19 f4       	brne	.+6      	; 0xb4 <main+0x66>
      ae:	84 e1       	ldi	r24, 0x14	; 20
      b0:	88 bb       	out	0x18, r24	; 24
      b2:	f6 cf       	rjmp	.-20     	; 0xa0 <main+0x52>

  if(x==0b00001000) 
      b4:	88 30       	cpi	r24, 0x08	; 8
      b6:	91 05       	cpc	r25, r1
      b8:	09 f0       	breq	.+2      	; 0xbc <main+0x6e>
      ba:	79 c1       	rjmp	.+754    	; 0x3ae <main+0x360>
  {PORTB=0b00001010;
      bc:	8a e0       	ldi	r24, 0x0A	; 10
      be:	88 bb       	out	0x18, r24	; 24
   _delay_ms(b);_delay_ms(b);_delay_ms(b);_delay_ms(b);
      c0:	c4 01       	movw	r24, r8
      c2:	b3 01       	movw	r22, r6
      c4:	af d7       	rcall	.+3934   	; 0x1024 <__floatsisf>
      c6:	5b 01       	movw	r10, r22
      c8:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      ca:	20 e0       	ldi	r18, 0x00	; 0
      cc:	30 e0       	ldi	r19, 0x00	; 0
      ce:	4a e7       	ldi	r20, 0x7A	; 122
      d0:	53 e4       	ldi	r21, 0x43	; 67
      d2:	32 d6       	rcall	.+3172   	; 0xd38 <__mulsf3>
      d4:	7b 01       	movw	r14, r22
      d6:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
      d8:	20 e0       	ldi	r18, 0x00	; 0
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	40 e8       	ldi	r20, 0x80	; 128
      de:	5f e3       	ldi	r21, 0x3F	; 63
      e0:	76 d7       	rcall	.+3820   	; 0xfce <__ltsf2>
      e2:	88 23       	and	r24, r24
      e4:	1c f4       	brge	.+6      	; 0xec <main+0x9e>
      e6:	61 e0       	ldi	r22, 0x01	; 1
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	1e c0       	rjmp	.+60     	; 0x128 <main+0xda>
		__ticks = 1;
	else if (__tmp > 65535)
      ec:	c8 01       	movw	r24, r16
      ee:	b7 01       	movw	r22, r14
      f0:	20 e0       	ldi	r18, 0x00	; 0
      f2:	3f ef       	ldi	r19, 0xFF	; 255
      f4:	4f e7       	ldi	r20, 0x7F	; 127
      f6:	57 e4       	ldi	r21, 0x47	; 71
      f8:	14 d7       	rcall	.+3624   	; 0xf22 <__gtsf2>
      fa:	18 16       	cp	r1, r24
      fc:	94 f4       	brge	.+36     	; 0x122 <main+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
      fe:	c6 01       	movw	r24, r12
     100:	b5 01       	movw	r22, r10
     102:	20 e0       	ldi	r18, 0x00	; 0
     104:	30 e0       	ldi	r19, 0x00	; 0
     106:	40 e2       	ldi	r20, 0x20	; 32
     108:	51 e4       	ldi	r21, 0x41	; 65
     10a:	16 d6       	rcall	.+3116   	; 0xd38 <__mulsf3>
     10c:	51 d4       	rcall	.+2210   	; 0x9b0 <__fixunssfsi>
     10e:	05 c0       	rjmp	.+10     	; 0x11a <main+0xcc>
     110:	ce 01       	movw	r24, r28
     112:	01 97       	sbiw	r24, 0x01	; 1
     114:	f1 f7       	brne	.-4      	; 0x112 <main+0xc4>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     116:	61 50       	subi	r22, 0x01	; 1
     118:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     11a:	61 15       	cp	r22, r1
     11c:	71 05       	cpc	r23, r1
     11e:	c1 f7       	brne	.-16     	; 0x110 <main+0xc2>
     120:	06 c0       	rjmp	.+12     	; 0x12e <main+0xe0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     122:	c8 01       	movw	r24, r16
     124:	b7 01       	movw	r22, r14
     126:	44 d4       	rcall	.+2184   	; 0x9b0 <__fixunssfsi>
     128:	cb 01       	movw	r24, r22
     12a:	01 97       	sbiw	r24, 0x01	; 1
     12c:	f1 f7       	brne	.-4      	; 0x12a <main+0xdc>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     12e:	c8 01       	movw	r24, r16
     130:	b7 01       	movw	r22, r14
     132:	20 e0       	ldi	r18, 0x00	; 0
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	40 e8       	ldi	r20, 0x80	; 128
     138:	5f e3       	ldi	r21, 0x3F	; 63
     13a:	49 d7       	rcall	.+3730   	; 0xfce <__ltsf2>
     13c:	88 23       	and	r24, r24
     13e:	1c f4       	brge	.+6      	; 0x146 <main+0xf8>
     140:	61 e0       	ldi	r22, 0x01	; 1
     142:	70 e0       	ldi	r23, 0x00	; 0
     144:	1e c0       	rjmp	.+60     	; 0x182 <main+0x134>
		__ticks = 1;
	else if (__tmp > 65535)
     146:	c8 01       	movw	r24, r16
     148:	b7 01       	movw	r22, r14
     14a:	20 e0       	ldi	r18, 0x00	; 0
     14c:	3f ef       	ldi	r19, 0xFF	; 255
     14e:	4f e7       	ldi	r20, 0x7F	; 127
     150:	57 e4       	ldi	r21, 0x47	; 71
     152:	e7 d6       	rcall	.+3534   	; 0xf22 <__gtsf2>
     154:	18 16       	cp	r1, r24
     156:	94 f4       	brge	.+36     	; 0x17c <main+0x12e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     158:	c6 01       	movw	r24, r12
     15a:	b5 01       	movw	r22, r10
     15c:	20 e0       	ldi	r18, 0x00	; 0
     15e:	30 e0       	ldi	r19, 0x00	; 0
     160:	40 e2       	ldi	r20, 0x20	; 32
     162:	51 e4       	ldi	r21, 0x41	; 65
     164:	e9 d5       	rcall	.+3026   	; 0xd38 <__mulsf3>
     166:	24 d4       	rcall	.+2120   	; 0x9b0 <__fixunssfsi>
     168:	05 c0       	rjmp	.+10     	; 0x174 <main+0x126>
     16a:	ce 01       	movw	r24, r28
     16c:	01 97       	sbiw	r24, 0x01	; 1
     16e:	f1 f7       	brne	.-4      	; 0x16c <main+0x11e>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     170:	61 50       	subi	r22, 0x01	; 1
     172:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     174:	61 15       	cp	r22, r1
     176:	71 05       	cpc	r23, r1
     178:	c1 f7       	brne	.-16     	; 0x16a <main+0x11c>
     17a:	06 c0       	rjmp	.+12     	; 0x188 <main+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     17c:	c8 01       	movw	r24, r16
     17e:	b7 01       	movw	r22, r14
     180:	17 d4       	rcall	.+2094   	; 0x9b0 <__fixunssfsi>
     182:	cb 01       	movw	r24, r22
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	f1 f7       	brne	.-4      	; 0x184 <main+0x136>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     188:	c8 01       	movw	r24, r16
     18a:	b7 01       	movw	r22, r14
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 e8       	ldi	r20, 0x80	; 128
     192:	5f e3       	ldi	r21, 0x3F	; 63
     194:	1c d7       	rcall	.+3640   	; 0xfce <__ltsf2>
     196:	88 23       	and	r24, r24
     198:	1c f4       	brge	.+6      	; 0x1a0 <main+0x152>
     19a:	61 e0       	ldi	r22, 0x01	; 1
     19c:	70 e0       	ldi	r23, 0x00	; 0
     19e:	1e c0       	rjmp	.+60     	; 0x1dc <main+0x18e>
		__ticks = 1;
	else if (__tmp > 65535)
     1a0:	c8 01       	movw	r24, r16
     1a2:	b7 01       	movw	r22, r14
     1a4:	20 e0       	ldi	r18, 0x00	; 0
     1a6:	3f ef       	ldi	r19, 0xFF	; 255
     1a8:	4f e7       	ldi	r20, 0x7F	; 127
     1aa:	57 e4       	ldi	r21, 0x47	; 71
     1ac:	ba d6       	rcall	.+3444   	; 0xf22 <__gtsf2>
     1ae:	18 16       	cp	r1, r24
     1b0:	94 f4       	brge	.+36     	; 0x1d6 <main+0x188>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1b2:	c6 01       	movw	r24, r12
     1b4:	b5 01       	movw	r22, r10
     1b6:	20 e0       	ldi	r18, 0x00	; 0
     1b8:	30 e0       	ldi	r19, 0x00	; 0
     1ba:	40 e2       	ldi	r20, 0x20	; 32
     1bc:	51 e4       	ldi	r21, 0x41	; 65
     1be:	bc d5       	rcall	.+2936   	; 0xd38 <__mulsf3>
     1c0:	f7 d3       	rcall	.+2030   	; 0x9b0 <__fixunssfsi>
     1c2:	05 c0       	rjmp	.+10     	; 0x1ce <main+0x180>
     1c4:	ce 01       	movw	r24, r28
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <main+0x178>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1ca:	61 50       	subi	r22, 0x01	; 1
     1cc:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ce:	61 15       	cp	r22, r1
     1d0:	71 05       	cpc	r23, r1
     1d2:	c1 f7       	brne	.-16     	; 0x1c4 <main+0x176>
     1d4:	06 c0       	rjmp	.+12     	; 0x1e2 <main+0x194>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1d6:	c8 01       	movw	r24, r16
     1d8:	b7 01       	movw	r22, r14
     1da:	ea d3       	rcall	.+2004   	; 0x9b0 <__fixunssfsi>
     1dc:	cb 01       	movw	r24, r22
     1de:	01 97       	sbiw	r24, 0x01	; 1
     1e0:	f1 f7       	brne	.-4      	; 0x1de <main+0x190>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     1e2:	c8 01       	movw	r24, r16
     1e4:	b7 01       	movw	r22, r14
     1e6:	20 e0       	ldi	r18, 0x00	; 0
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	40 e8       	ldi	r20, 0x80	; 128
     1ec:	5f e3       	ldi	r21, 0x3F	; 63
     1ee:	ef d6       	rcall	.+3550   	; 0xfce <__ltsf2>
     1f0:	88 23       	and	r24, r24
     1f2:	1c f4       	brge	.+6      	; 0x1fa <main+0x1ac>
     1f4:	61 e0       	ldi	r22, 0x01	; 1
     1f6:	70 e0       	ldi	r23, 0x00	; 0
     1f8:	1e c0       	rjmp	.+60     	; 0x236 <main+0x1e8>
		__ticks = 1;
	else if (__tmp > 65535)
     1fa:	c8 01       	movw	r24, r16
     1fc:	b7 01       	movw	r22, r14
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	3f ef       	ldi	r19, 0xFF	; 255
     202:	4f e7       	ldi	r20, 0x7F	; 127
     204:	57 e4       	ldi	r21, 0x47	; 71
     206:	8d d6       	rcall	.+3354   	; 0xf22 <__gtsf2>
     208:	18 16       	cp	r1, r24
     20a:	94 f4       	brge	.+36     	; 0x230 <main+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     20c:	c6 01       	movw	r24, r12
     20e:	b5 01       	movw	r22, r10
     210:	20 e0       	ldi	r18, 0x00	; 0
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e2       	ldi	r20, 0x20	; 32
     216:	51 e4       	ldi	r21, 0x41	; 65
     218:	8f d5       	rcall	.+2846   	; 0xd38 <__mulsf3>
     21a:	ca d3       	rcall	.+1940   	; 0x9b0 <__fixunssfsi>
     21c:	05 c0       	rjmp	.+10     	; 0x228 <main+0x1da>
     21e:	ce 01       	movw	r24, r28
     220:	01 97       	sbiw	r24, 0x01	; 1
     222:	f1 f7       	brne	.-4      	; 0x220 <main+0x1d2>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     224:	61 50       	subi	r22, 0x01	; 1
     226:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     228:	61 15       	cp	r22, r1
     22a:	71 05       	cpc	r23, r1
     22c:	c1 f7       	brne	.-16     	; 0x21e <main+0x1d0>
     22e:	06 c0       	rjmp	.+12     	; 0x23c <main+0x1ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     230:	c8 01       	movw	r24, r16
     232:	b7 01       	movw	r22, r14
     234:	bd d3       	rcall	.+1914   	; 0x9b0 <__fixunssfsi>
     236:	cb 01       	movw	r24, r22
     238:	01 97       	sbiw	r24, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x1ea>
   PORTB=0b00010000;
     23c:	80 e1       	ldi	r24, 0x10	; 16
     23e:	88 bb       	out	0x18, r24	; 24
   _delay_ms(t); _delay_ms(t);_delay_ms(t);_delay_ms(t);
     240:	c2 01       	movw	r24, r4
     242:	b1 01       	movw	r22, r2
     244:	ef d6       	rcall	.+3550   	; 0x1024 <__floatsisf>
     246:	5b 01       	movw	r10, r22
     248:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     24a:	20 e0       	ldi	r18, 0x00	; 0
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	4a e7       	ldi	r20, 0x7A	; 122
     250:	53 e4       	ldi	r21, 0x43	; 67
     252:	72 d5       	rcall	.+2788   	; 0xd38 <__mulsf3>
     254:	7b 01       	movw	r14, r22
     256:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	40 e8       	ldi	r20, 0x80	; 128
     25e:	5f e3       	ldi	r21, 0x3F	; 63
     260:	b6 d6       	rcall	.+3436   	; 0xfce <__ltsf2>
     262:	88 23       	and	r24, r24
     264:	1c f4       	brge	.+6      	; 0x26c <main+0x21e>
     266:	61 e0       	ldi	r22, 0x01	; 1
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	1e c0       	rjmp	.+60     	; 0x2a8 <main+0x25a>
		__ticks = 1;
	else if (__tmp > 65535)
     26c:	c8 01       	movw	r24, r16
     26e:	b7 01       	movw	r22, r14
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	3f ef       	ldi	r19, 0xFF	; 255
     274:	4f e7       	ldi	r20, 0x7F	; 127
     276:	57 e4       	ldi	r21, 0x47	; 71
     278:	54 d6       	rcall	.+3240   	; 0xf22 <__gtsf2>
     27a:	18 16       	cp	r1, r24
     27c:	94 f4       	brge	.+36     	; 0x2a2 <main+0x254>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     27e:	c6 01       	movw	r24, r12
     280:	b5 01       	movw	r22, r10
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e2       	ldi	r20, 0x20	; 32
     288:	51 e4       	ldi	r21, 0x41	; 65
     28a:	56 d5       	rcall	.+2732   	; 0xd38 <__mulsf3>
     28c:	91 d3       	rcall	.+1826   	; 0x9b0 <__fixunssfsi>
     28e:	05 c0       	rjmp	.+10     	; 0x29a <main+0x24c>
     290:	ce 01       	movw	r24, r28
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <main+0x244>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     296:	61 50       	subi	r22, 0x01	; 1
     298:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     29a:	61 15       	cp	r22, r1
     29c:	71 05       	cpc	r23, r1
     29e:	c1 f7       	brne	.-16     	; 0x290 <main+0x242>
     2a0:	06 c0       	rjmp	.+12     	; 0x2ae <main+0x260>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2a2:	c8 01       	movw	r24, r16
     2a4:	b7 01       	movw	r22, r14
     2a6:	84 d3       	rcall	.+1800   	; 0x9b0 <__fixunssfsi>
     2a8:	cb 01       	movw	r24, r22
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <main+0x25c>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     2ae:	c8 01       	movw	r24, r16
     2b0:	b7 01       	movw	r22, r14
     2b2:	20 e0       	ldi	r18, 0x00	; 0
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	40 e8       	ldi	r20, 0x80	; 128
     2b8:	5f e3       	ldi	r21, 0x3F	; 63
     2ba:	89 d6       	rcall	.+3346   	; 0xfce <__ltsf2>
     2bc:	88 23       	and	r24, r24
     2be:	1c f4       	brge	.+6      	; 0x2c6 <main+0x278>
     2c0:	61 e0       	ldi	r22, 0x01	; 1
     2c2:	70 e0       	ldi	r23, 0x00	; 0
     2c4:	1e c0       	rjmp	.+60     	; 0x302 <main+0x2b4>
		__ticks = 1;
	else if (__tmp > 65535)
     2c6:	c8 01       	movw	r24, r16
     2c8:	b7 01       	movw	r22, r14
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	3f ef       	ldi	r19, 0xFF	; 255
     2ce:	4f e7       	ldi	r20, 0x7F	; 127
     2d0:	57 e4       	ldi	r21, 0x47	; 71
     2d2:	27 d6       	rcall	.+3150   	; 0xf22 <__gtsf2>
     2d4:	18 16       	cp	r1, r24
     2d6:	94 f4       	brge	.+36     	; 0x2fc <main+0x2ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2d8:	c6 01       	movw	r24, r12
     2da:	b5 01       	movw	r22, r10
     2dc:	20 e0       	ldi	r18, 0x00	; 0
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	40 e2       	ldi	r20, 0x20	; 32
     2e2:	51 e4       	ldi	r21, 0x41	; 65
     2e4:	29 d5       	rcall	.+2642   	; 0xd38 <__mulsf3>
     2e6:	64 d3       	rcall	.+1736   	; 0x9b0 <__fixunssfsi>
     2e8:	05 c0       	rjmp	.+10     	; 0x2f4 <main+0x2a6>
     2ea:	ce 01       	movw	r24, r28
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	f1 f7       	brne	.-4      	; 0x2ec <main+0x29e>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2f0:	61 50       	subi	r22, 0x01	; 1
     2f2:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2f4:	61 15       	cp	r22, r1
     2f6:	71 05       	cpc	r23, r1
     2f8:	c1 f7       	brne	.-16     	; 0x2ea <main+0x29c>
     2fa:	06 c0       	rjmp	.+12     	; 0x308 <main+0x2ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2fc:	c8 01       	movw	r24, r16
     2fe:	b7 01       	movw	r22, r14
     300:	57 d3       	rcall	.+1710   	; 0x9b0 <__fixunssfsi>
     302:	cb 01       	movw	r24, r22
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	f1 f7       	brne	.-4      	; 0x304 <main+0x2b6>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     308:	c8 01       	movw	r24, r16
     30a:	b7 01       	movw	r22, r14
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	40 e8       	ldi	r20, 0x80	; 128
     312:	5f e3       	ldi	r21, 0x3F	; 63
     314:	5c d6       	rcall	.+3256   	; 0xfce <__ltsf2>
     316:	88 23       	and	r24, r24
     318:	1c f4       	brge	.+6      	; 0x320 <main+0x2d2>
     31a:	61 e0       	ldi	r22, 0x01	; 1
     31c:	70 e0       	ldi	r23, 0x00	; 0
     31e:	1e c0       	rjmp	.+60     	; 0x35c <main+0x30e>
		__ticks = 1;
	else if (__tmp > 65535)
     320:	c8 01       	movw	r24, r16
     322:	b7 01       	movw	r22, r14
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	3f ef       	ldi	r19, 0xFF	; 255
     328:	4f e7       	ldi	r20, 0x7F	; 127
     32a:	57 e4       	ldi	r21, 0x47	; 71
     32c:	fa d5       	rcall	.+3060   	; 0xf22 <__gtsf2>
     32e:	18 16       	cp	r1, r24
     330:	94 f4       	brge	.+36     	; 0x356 <main+0x308>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     332:	c6 01       	movw	r24, r12
     334:	b5 01       	movw	r22, r10
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	40 e2       	ldi	r20, 0x20	; 32
     33c:	51 e4       	ldi	r21, 0x41	; 65
     33e:	fc d4       	rcall	.+2552   	; 0xd38 <__mulsf3>
     340:	37 d3       	rcall	.+1646   	; 0x9b0 <__fixunssfsi>
     342:	05 c0       	rjmp	.+10     	; 0x34e <main+0x300>
     344:	ce 01       	movw	r24, r28
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <main+0x2f8>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     34a:	61 50       	subi	r22, 0x01	; 1
     34c:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     34e:	61 15       	cp	r22, r1
     350:	71 05       	cpc	r23, r1
     352:	c1 f7       	brne	.-16     	; 0x344 <main+0x2f6>
     354:	06 c0       	rjmp	.+12     	; 0x362 <main+0x314>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     356:	c8 01       	movw	r24, r16
     358:	b7 01       	movw	r22, r14
     35a:	2a d3       	rcall	.+1620   	; 0x9b0 <__fixunssfsi>
     35c:	cb 01       	movw	r24, r22
     35e:	01 97       	sbiw	r24, 0x01	; 1
     360:	f1 f7       	brne	.-4      	; 0x35e <main+0x310>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     362:	c8 01       	movw	r24, r16
     364:	b7 01       	movw	r22, r14
     366:	20 e0       	ldi	r18, 0x00	; 0
     368:	30 e0       	ldi	r19, 0x00	; 0
     36a:	40 e8       	ldi	r20, 0x80	; 128
     36c:	5f e3       	ldi	r21, 0x3F	; 63
     36e:	2f d6       	rcall	.+3166   	; 0xfce <__ltsf2>
     370:	88 23       	and	r24, r24
     372:	0c f4       	brge	.+2      	; 0x376 <main+0x328>
     374:	f8 c2       	rjmp	.+1520   	; 0x966 <__stack+0x507>
		__ticks = 1;
	else if (__tmp > 65535)
     376:	c8 01       	movw	r24, r16
     378:	b7 01       	movw	r22, r14
     37a:	20 e0       	ldi	r18, 0x00	; 0
     37c:	3f ef       	ldi	r19, 0xFF	; 255
     37e:	4f e7       	ldi	r20, 0x7F	; 127
     380:	57 e4       	ldi	r21, 0x47	; 71
     382:	cf d5       	rcall	.+2974   	; 0xf22 <__gtsf2>
     384:	18 16       	cp	r1, r24
     386:	0c f0       	brlt	.+2      	; 0x38a <main+0x33c>
     388:	0c c3       	rjmp	.+1560   	; 0x9a2 <__stack+0x543>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     38a:	c6 01       	movw	r24, r12
     38c:	b5 01       	movw	r22, r10
     38e:	20 e0       	ldi	r18, 0x00	; 0
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	40 e2       	ldi	r20, 0x20	; 32
     394:	51 e4       	ldi	r21, 0x41	; 65
     396:	d0 d4       	rcall	.+2464   	; 0xd38 <__mulsf3>
     398:	0b d3       	rcall	.+1558   	; 0x9b0 <__fixunssfsi>
     39a:	05 c0       	rjmp	.+10     	; 0x3a6 <main+0x358>
     39c:	ce 01       	movw	r24, r28
     39e:	01 97       	sbiw	r24, 0x01	; 1
     3a0:	f1 f7       	brne	.-4      	; 0x39e <main+0x350>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3a2:	61 50       	subi	r22, 0x01	; 1
     3a4:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3a6:	61 15       	cp	r22, r1
     3a8:	71 05       	cpc	r23, r1
     3aa:	c1 f7       	brne	.-16     	; 0x39c <main+0x34e>
     3ac:	79 ce       	rjmp	.-782    	; 0xa0 <main+0x52>
  }
   
   if(x==0b0000001)
     3ae:	81 30       	cpi	r24, 0x01	; 1
     3b0:	91 05       	cpc	r25, r1
     3b2:	09 f0       	breq	.+2      	; 0x3b6 <main+0x368>
     3b4:	79 c1       	rjmp	.+754    	; 0x6a8 <__stack+0x249>
  {
   PORTB=0b00001010;
     3b6:	8a e0       	ldi	r24, 0x0A	; 10
     3b8:	88 bb       	out	0x18, r24	; 24
   _delay_ms(b);_delay_ms(b);_delay_ms(b);_delay_ms(b);
     3ba:	c4 01       	movw	r24, r8
     3bc:	b3 01       	movw	r22, r6
     3be:	32 d6       	rcall	.+3172   	; 0x1024 <__floatsisf>
     3c0:	5b 01       	movw	r10, r22
     3c2:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	4a e7       	ldi	r20, 0x7A	; 122
     3ca:	53 e4       	ldi	r21, 0x43	; 67
     3cc:	b5 d4       	rcall	.+2410   	; 0xd38 <__mulsf3>
     3ce:	7b 01       	movw	r14, r22
     3d0:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     3d2:	20 e0       	ldi	r18, 0x00	; 0
     3d4:	30 e0       	ldi	r19, 0x00	; 0
     3d6:	40 e8       	ldi	r20, 0x80	; 128
     3d8:	5f e3       	ldi	r21, 0x3F	; 63
     3da:	f9 d5       	rcall	.+3058   	; 0xfce <__ltsf2>
     3dc:	88 23       	and	r24, r24
     3de:	1c f4       	brge	.+6      	; 0x3e6 <main+0x398>
     3e0:	61 e0       	ldi	r22, 0x01	; 1
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	1e c0       	rjmp	.+60     	; 0x422 <main+0x3d4>
		__ticks = 1;
	else if (__tmp > 65535)
     3e6:	c8 01       	movw	r24, r16
     3e8:	b7 01       	movw	r22, r14
     3ea:	20 e0       	ldi	r18, 0x00	; 0
     3ec:	3f ef       	ldi	r19, 0xFF	; 255
     3ee:	4f e7       	ldi	r20, 0x7F	; 127
     3f0:	57 e4       	ldi	r21, 0x47	; 71
     3f2:	97 d5       	rcall	.+2862   	; 0xf22 <__gtsf2>
     3f4:	18 16       	cp	r1, r24
     3f6:	94 f4       	brge	.+36     	; 0x41c <main+0x3ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3f8:	c6 01       	movw	r24, r12
     3fa:	b5 01       	movw	r22, r10
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	40 e2       	ldi	r20, 0x20	; 32
     402:	51 e4       	ldi	r21, 0x41	; 65
     404:	99 d4       	rcall	.+2354   	; 0xd38 <__mulsf3>
     406:	d4 d2       	rcall	.+1448   	; 0x9b0 <__fixunssfsi>
     408:	05 c0       	rjmp	.+10     	; 0x414 <main+0x3c6>
     40a:	ce 01       	movw	r24, r28
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <main+0x3be>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     410:	61 50       	subi	r22, 0x01	; 1
     412:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     414:	61 15       	cp	r22, r1
     416:	71 05       	cpc	r23, r1
     418:	c1 f7       	brne	.-16     	; 0x40a <main+0x3bc>
     41a:	06 c0       	rjmp	.+12     	; 0x428 <main+0x3da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     41c:	c8 01       	movw	r24, r16
     41e:	b7 01       	movw	r22, r14
     420:	c7 d2       	rcall	.+1422   	; 0x9b0 <__fixunssfsi>
     422:	cb 01       	movw	r24, r22
     424:	01 97       	sbiw	r24, 0x01	; 1
     426:	f1 f7       	brne	.-4      	; 0x424 <main+0x3d6>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     428:	c8 01       	movw	r24, r16
     42a:	b7 01       	movw	r22, r14
     42c:	20 e0       	ldi	r18, 0x00	; 0
     42e:	30 e0       	ldi	r19, 0x00	; 0
     430:	40 e8       	ldi	r20, 0x80	; 128
     432:	5f e3       	ldi	r21, 0x3F	; 63
     434:	cc d5       	rcall	.+2968   	; 0xfce <__ltsf2>
     436:	88 23       	and	r24, r24
     438:	1c f4       	brge	.+6      	; 0x440 <main+0x3f2>
     43a:	61 e0       	ldi	r22, 0x01	; 1
     43c:	70 e0       	ldi	r23, 0x00	; 0
     43e:	1e c0       	rjmp	.+60     	; 0x47c <__stack+0x1d>
		__ticks = 1;
	else if (__tmp > 65535)
     440:	c8 01       	movw	r24, r16
     442:	b7 01       	movw	r22, r14
     444:	20 e0       	ldi	r18, 0x00	; 0
     446:	3f ef       	ldi	r19, 0xFF	; 255
     448:	4f e7       	ldi	r20, 0x7F	; 127
     44a:	57 e4       	ldi	r21, 0x47	; 71
     44c:	6a d5       	rcall	.+2772   	; 0xf22 <__gtsf2>
     44e:	18 16       	cp	r1, r24
     450:	94 f4       	brge	.+36     	; 0x476 <__stack+0x17>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     452:	c6 01       	movw	r24, r12
     454:	b5 01       	movw	r22, r10
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	40 e2       	ldi	r20, 0x20	; 32
     45c:	51 e4       	ldi	r21, 0x41	; 65
     45e:	6c d4       	rcall	.+2264   	; 0xd38 <__mulsf3>
     460:	a7 d2       	rcall	.+1358   	; 0x9b0 <__fixunssfsi>
     462:	05 c0       	rjmp	.+10     	; 0x46e <__stack+0xf>
     464:	ce 01       	movw	r24, r28
     466:	01 97       	sbiw	r24, 0x01	; 1
     468:	f1 f7       	brne	.-4      	; 0x466 <__stack+0x7>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     46a:	61 50       	subi	r22, 0x01	; 1
     46c:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     46e:	61 15       	cp	r22, r1
     470:	71 05       	cpc	r23, r1
     472:	c1 f7       	brne	.-16     	; 0x464 <__stack+0x5>
     474:	06 c0       	rjmp	.+12     	; 0x482 <__stack+0x23>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     476:	c8 01       	movw	r24, r16
     478:	b7 01       	movw	r22, r14
     47a:	9a d2       	rcall	.+1332   	; 0x9b0 <__fixunssfsi>
     47c:	cb 01       	movw	r24, r22
     47e:	01 97       	sbiw	r24, 0x01	; 1
     480:	f1 f7       	brne	.-4      	; 0x47e <__stack+0x1f>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     482:	c8 01       	movw	r24, r16
     484:	b7 01       	movw	r22, r14
     486:	20 e0       	ldi	r18, 0x00	; 0
     488:	30 e0       	ldi	r19, 0x00	; 0
     48a:	40 e8       	ldi	r20, 0x80	; 128
     48c:	5f e3       	ldi	r21, 0x3F	; 63
     48e:	9f d5       	rcall	.+2878   	; 0xfce <__ltsf2>
     490:	88 23       	and	r24, r24
     492:	1c f4       	brge	.+6      	; 0x49a <__stack+0x3b>
     494:	61 e0       	ldi	r22, 0x01	; 1
     496:	70 e0       	ldi	r23, 0x00	; 0
     498:	1e c0       	rjmp	.+60     	; 0x4d6 <__stack+0x77>
		__ticks = 1;
	else if (__tmp > 65535)
     49a:	c8 01       	movw	r24, r16
     49c:	b7 01       	movw	r22, r14
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	3f ef       	ldi	r19, 0xFF	; 255
     4a2:	4f e7       	ldi	r20, 0x7F	; 127
     4a4:	57 e4       	ldi	r21, 0x47	; 71
     4a6:	3d d5       	rcall	.+2682   	; 0xf22 <__gtsf2>
     4a8:	18 16       	cp	r1, r24
     4aa:	94 f4       	brge	.+36     	; 0x4d0 <__stack+0x71>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4ac:	c6 01       	movw	r24, r12
     4ae:	b5 01       	movw	r22, r10
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	40 e2       	ldi	r20, 0x20	; 32
     4b6:	51 e4       	ldi	r21, 0x41	; 65
     4b8:	3f d4       	rcall	.+2174   	; 0xd38 <__mulsf3>
     4ba:	7a d2       	rcall	.+1268   	; 0x9b0 <__fixunssfsi>
     4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <__stack+0x69>
     4be:	ce 01       	movw	r24, r28
     4c0:	01 97       	sbiw	r24, 0x01	; 1
     4c2:	f1 f7       	brne	.-4      	; 0x4c0 <__stack+0x61>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4c4:	61 50       	subi	r22, 0x01	; 1
     4c6:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4c8:	61 15       	cp	r22, r1
     4ca:	71 05       	cpc	r23, r1
     4cc:	c1 f7       	brne	.-16     	; 0x4be <__stack+0x5f>
     4ce:	06 c0       	rjmp	.+12     	; 0x4dc <__stack+0x7d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4d0:	c8 01       	movw	r24, r16
     4d2:	b7 01       	movw	r22, r14
     4d4:	6d d2       	rcall	.+1242   	; 0x9b0 <__fixunssfsi>
     4d6:	cb 01       	movw	r24, r22
     4d8:	01 97       	sbiw	r24, 0x01	; 1
     4da:	f1 f7       	brne	.-4      	; 0x4d8 <__stack+0x79>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     4dc:	c8 01       	movw	r24, r16
     4de:	b7 01       	movw	r22, r14
     4e0:	20 e0       	ldi	r18, 0x00	; 0
     4e2:	30 e0       	ldi	r19, 0x00	; 0
     4e4:	40 e8       	ldi	r20, 0x80	; 128
     4e6:	5f e3       	ldi	r21, 0x3F	; 63
     4e8:	72 d5       	rcall	.+2788   	; 0xfce <__ltsf2>
     4ea:	88 23       	and	r24, r24
     4ec:	1c f4       	brge	.+6      	; 0x4f4 <__stack+0x95>
     4ee:	61 e0       	ldi	r22, 0x01	; 1
     4f0:	70 e0       	ldi	r23, 0x00	; 0
     4f2:	1e c0       	rjmp	.+60     	; 0x530 <__stack+0xd1>
		__ticks = 1;
	else if (__tmp > 65535)
     4f4:	c8 01       	movw	r24, r16
     4f6:	b7 01       	movw	r22, r14
     4f8:	20 e0       	ldi	r18, 0x00	; 0
     4fa:	3f ef       	ldi	r19, 0xFF	; 255
     4fc:	4f e7       	ldi	r20, 0x7F	; 127
     4fe:	57 e4       	ldi	r21, 0x47	; 71
     500:	10 d5       	rcall	.+2592   	; 0xf22 <__gtsf2>
     502:	18 16       	cp	r1, r24
     504:	94 f4       	brge	.+36     	; 0x52a <__stack+0xcb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     506:	c6 01       	movw	r24, r12
     508:	b5 01       	movw	r22, r10
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	40 e2       	ldi	r20, 0x20	; 32
     510:	51 e4       	ldi	r21, 0x41	; 65
     512:	12 d4       	rcall	.+2084   	; 0xd38 <__mulsf3>
     514:	4d d2       	rcall	.+1178   	; 0x9b0 <__fixunssfsi>
     516:	05 c0       	rjmp	.+10     	; 0x522 <__stack+0xc3>
     518:	ce 01       	movw	r24, r28
     51a:	01 97       	sbiw	r24, 0x01	; 1
     51c:	f1 f7       	brne	.-4      	; 0x51a <__stack+0xbb>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     51e:	61 50       	subi	r22, 0x01	; 1
     520:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     522:	61 15       	cp	r22, r1
     524:	71 05       	cpc	r23, r1
     526:	c1 f7       	brne	.-16     	; 0x518 <__stack+0xb9>
     528:	06 c0       	rjmp	.+12     	; 0x536 <__stack+0xd7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     52a:	c8 01       	movw	r24, r16
     52c:	b7 01       	movw	r22, r14
     52e:	40 d2       	rcall	.+1152   	; 0x9b0 <__fixunssfsi>
     530:	cb 01       	movw	r24, r22
     532:	01 97       	sbiw	r24, 0x01	; 1
     534:	f1 f7       	brne	.-4      	; 0x532 <__stack+0xd3>
   PORTB=0b00010000;
     536:	80 e1       	ldi	r24, 0x10	; 16
     538:	88 bb       	out	0x18, r24	; 24
    _delay_ms(t);_delay_ms(t);_delay_ms(t);_delay_ms(t);
     53a:	c2 01       	movw	r24, r4
     53c:	b1 01       	movw	r22, r2
     53e:	72 d5       	rcall	.+2788   	; 0x1024 <__floatsisf>
     540:	5b 01       	movw	r10, r22
     542:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	4a e7       	ldi	r20, 0x7A	; 122
     54a:	53 e4       	ldi	r21, 0x43	; 67
     54c:	f5 d3       	rcall	.+2026   	; 0xd38 <__mulsf3>
     54e:	7b 01       	movw	r14, r22
     550:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	40 e8       	ldi	r20, 0x80	; 128
     558:	5f e3       	ldi	r21, 0x3F	; 63
     55a:	39 d5       	rcall	.+2674   	; 0xfce <__ltsf2>
     55c:	88 23       	and	r24, r24
     55e:	1c f4       	brge	.+6      	; 0x566 <__stack+0x107>
     560:	61 e0       	ldi	r22, 0x01	; 1
     562:	70 e0       	ldi	r23, 0x00	; 0
     564:	1e c0       	rjmp	.+60     	; 0x5a2 <__stack+0x143>
		__ticks = 1;
	else if (__tmp > 65535)
     566:	c8 01       	movw	r24, r16
     568:	b7 01       	movw	r22, r14
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	3f ef       	ldi	r19, 0xFF	; 255
     56e:	4f e7       	ldi	r20, 0x7F	; 127
     570:	57 e4       	ldi	r21, 0x47	; 71
     572:	d7 d4       	rcall	.+2478   	; 0xf22 <__gtsf2>
     574:	18 16       	cp	r1, r24
     576:	94 f4       	brge	.+36     	; 0x59c <__stack+0x13d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     578:	c6 01       	movw	r24, r12
     57a:	b5 01       	movw	r22, r10
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	40 e2       	ldi	r20, 0x20	; 32
     582:	51 e4       	ldi	r21, 0x41	; 65
     584:	d9 d3       	rcall	.+1970   	; 0xd38 <__mulsf3>
     586:	14 d2       	rcall	.+1064   	; 0x9b0 <__fixunssfsi>
     588:	05 c0       	rjmp	.+10     	; 0x594 <__stack+0x135>
     58a:	ce 01       	movw	r24, r28
     58c:	01 97       	sbiw	r24, 0x01	; 1
     58e:	f1 f7       	brne	.-4      	; 0x58c <__stack+0x12d>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     590:	61 50       	subi	r22, 0x01	; 1
     592:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     594:	61 15       	cp	r22, r1
     596:	71 05       	cpc	r23, r1
     598:	c1 f7       	brne	.-16     	; 0x58a <__stack+0x12b>
     59a:	06 c0       	rjmp	.+12     	; 0x5a8 <__stack+0x149>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     59c:	c8 01       	movw	r24, r16
     59e:	b7 01       	movw	r22, r14
     5a0:	07 d2       	rcall	.+1038   	; 0x9b0 <__fixunssfsi>
     5a2:	cb 01       	movw	r24, r22
     5a4:	01 97       	sbiw	r24, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <__stack+0x145>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     5a8:	c8 01       	movw	r24, r16
     5aa:	b7 01       	movw	r22, r14
     5ac:	20 e0       	ldi	r18, 0x00	; 0
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	40 e8       	ldi	r20, 0x80	; 128
     5b2:	5f e3       	ldi	r21, 0x3F	; 63
     5b4:	0c d5       	rcall	.+2584   	; 0xfce <__ltsf2>
     5b6:	88 23       	and	r24, r24
     5b8:	1c f4       	brge	.+6      	; 0x5c0 <__stack+0x161>
     5ba:	61 e0       	ldi	r22, 0x01	; 1
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	1e c0       	rjmp	.+60     	; 0x5fc <__stack+0x19d>
		__ticks = 1;
	else if (__tmp > 65535)
     5c0:	c8 01       	movw	r24, r16
     5c2:	b7 01       	movw	r22, r14
     5c4:	20 e0       	ldi	r18, 0x00	; 0
     5c6:	3f ef       	ldi	r19, 0xFF	; 255
     5c8:	4f e7       	ldi	r20, 0x7F	; 127
     5ca:	57 e4       	ldi	r21, 0x47	; 71
     5cc:	aa d4       	rcall	.+2388   	; 0xf22 <__gtsf2>
     5ce:	18 16       	cp	r1, r24
     5d0:	94 f4       	brge	.+36     	; 0x5f6 <__stack+0x197>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5d2:	c6 01       	movw	r24, r12
     5d4:	b5 01       	movw	r22, r10
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	40 e2       	ldi	r20, 0x20	; 32
     5dc:	51 e4       	ldi	r21, 0x41	; 65
     5de:	ac d3       	rcall	.+1880   	; 0xd38 <__mulsf3>
     5e0:	e7 d1       	rcall	.+974    	; 0x9b0 <__fixunssfsi>
     5e2:	05 c0       	rjmp	.+10     	; 0x5ee <__stack+0x18f>
     5e4:	ce 01       	movw	r24, r28
     5e6:	01 97       	sbiw	r24, 0x01	; 1
     5e8:	f1 f7       	brne	.-4      	; 0x5e6 <__stack+0x187>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5ea:	61 50       	subi	r22, 0x01	; 1
     5ec:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5ee:	61 15       	cp	r22, r1
     5f0:	71 05       	cpc	r23, r1
     5f2:	c1 f7       	brne	.-16     	; 0x5e4 <__stack+0x185>
     5f4:	06 c0       	rjmp	.+12     	; 0x602 <__stack+0x1a3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5f6:	c8 01       	movw	r24, r16
     5f8:	b7 01       	movw	r22, r14
     5fa:	da d1       	rcall	.+948    	; 0x9b0 <__fixunssfsi>
     5fc:	cb 01       	movw	r24, r22
     5fe:	01 97       	sbiw	r24, 0x01	; 1
     600:	f1 f7       	brne	.-4      	; 0x5fe <__stack+0x19f>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     602:	c8 01       	movw	r24, r16
     604:	b7 01       	movw	r22, r14
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	40 e8       	ldi	r20, 0x80	; 128
     60c:	5f e3       	ldi	r21, 0x3F	; 63
     60e:	df d4       	rcall	.+2494   	; 0xfce <__ltsf2>
     610:	88 23       	and	r24, r24
     612:	1c f4       	brge	.+6      	; 0x61a <__stack+0x1bb>
     614:	61 e0       	ldi	r22, 0x01	; 1
     616:	70 e0       	ldi	r23, 0x00	; 0
     618:	1e c0       	rjmp	.+60     	; 0x656 <__stack+0x1f7>
		__ticks = 1;
	else if (__tmp > 65535)
     61a:	c8 01       	movw	r24, r16
     61c:	b7 01       	movw	r22, r14
     61e:	20 e0       	ldi	r18, 0x00	; 0
     620:	3f ef       	ldi	r19, 0xFF	; 255
     622:	4f e7       	ldi	r20, 0x7F	; 127
     624:	57 e4       	ldi	r21, 0x47	; 71
     626:	7d d4       	rcall	.+2298   	; 0xf22 <__gtsf2>
     628:	18 16       	cp	r1, r24
     62a:	94 f4       	brge	.+36     	; 0x650 <__stack+0x1f1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     62c:	c6 01       	movw	r24, r12
     62e:	b5 01       	movw	r22, r10
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	40 e2       	ldi	r20, 0x20	; 32
     636:	51 e4       	ldi	r21, 0x41	; 65
     638:	7f d3       	rcall	.+1790   	; 0xd38 <__mulsf3>
     63a:	ba d1       	rcall	.+884    	; 0x9b0 <__fixunssfsi>
     63c:	05 c0       	rjmp	.+10     	; 0x648 <__stack+0x1e9>
     63e:	ce 01       	movw	r24, r28
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	f1 f7       	brne	.-4      	; 0x640 <__stack+0x1e1>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     644:	61 50       	subi	r22, 0x01	; 1
     646:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     648:	61 15       	cp	r22, r1
     64a:	71 05       	cpc	r23, r1
     64c:	c1 f7       	brne	.-16     	; 0x63e <__stack+0x1df>
     64e:	06 c0       	rjmp	.+12     	; 0x65c <__stack+0x1fd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     650:	c8 01       	movw	r24, r16
     652:	b7 01       	movw	r22, r14
     654:	ad d1       	rcall	.+858    	; 0x9b0 <__fixunssfsi>
     656:	cb 01       	movw	r24, r22
     658:	01 97       	sbiw	r24, 0x01	; 1
     65a:	f1 f7       	brne	.-4      	; 0x658 <__stack+0x1f9>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     65c:	c8 01       	movw	r24, r16
     65e:	b7 01       	movw	r22, r14
     660:	20 e0       	ldi	r18, 0x00	; 0
     662:	30 e0       	ldi	r19, 0x00	; 0
     664:	40 e8       	ldi	r20, 0x80	; 128
     666:	5f e3       	ldi	r21, 0x3F	; 63
     668:	b2 d4       	rcall	.+2404   	; 0xfce <__ltsf2>
     66a:	88 23       	and	r24, r24
     66c:	0c f4       	brge	.+2      	; 0x670 <__stack+0x211>
     66e:	7b c1       	rjmp	.+758    	; 0x966 <__stack+0x507>
		__ticks = 1;
	else if (__tmp > 65535)
     670:	c8 01       	movw	r24, r16
     672:	b7 01       	movw	r22, r14
     674:	20 e0       	ldi	r18, 0x00	; 0
     676:	3f ef       	ldi	r19, 0xFF	; 255
     678:	4f e7       	ldi	r20, 0x7F	; 127
     67a:	57 e4       	ldi	r21, 0x47	; 71
     67c:	52 d4       	rcall	.+2212   	; 0xf22 <__gtsf2>
     67e:	18 16       	cp	r1, r24
     680:	0c f0       	brlt	.+2      	; 0x684 <__stack+0x225>
     682:	8f c1       	rjmp	.+798    	; 0x9a2 <__stack+0x543>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     684:	c6 01       	movw	r24, r12
     686:	b5 01       	movw	r22, r10
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	40 e2       	ldi	r20, 0x20	; 32
     68e:	51 e4       	ldi	r21, 0x41	; 65
     690:	53 d3       	rcall	.+1702   	; 0xd38 <__mulsf3>
     692:	8e d1       	rcall	.+796    	; 0x9b0 <__fixunssfsi>
     694:	05 c0       	rjmp	.+10     	; 0x6a0 <__stack+0x241>
     696:	ce 01       	movw	r24, r28
     698:	01 97       	sbiw	r24, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <__stack+0x239>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     69c:	61 50       	subi	r22, 0x01	; 1
     69e:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6a0:	61 15       	cp	r22, r1
     6a2:	71 05       	cpc	r23, r1
     6a4:	c1 f7       	brne	.-16     	; 0x696 <__stack+0x237>
     6a6:	fc cc       	rjmp	.-1544   	; 0xa0 <main+0x52>
  }
  
  if(x==0b0000000)
     6a8:	89 2b       	or	r24, r25
     6aa:	09 f0       	breq	.+2      	; 0x6ae <__stack+0x24f>
     6ac:	f9 cc       	rjmp	.-1550   	; 0xa0 <main+0x52>
  {
   PORTB=0b00001010;
     6ae:	8a e0       	ldi	r24, 0x0A	; 10
     6b0:	88 bb       	out	0x18, r24	; 24
   _delay_ms(b);_delay_ms(b);_delay_ms(b);_delay_ms(b);
     6b2:	c4 01       	movw	r24, r8
     6b4:	b3 01       	movw	r22, r6
     6b6:	b6 d4       	rcall	.+2412   	; 0x1024 <__floatsisf>
     6b8:	5b 01       	movw	r10, r22
     6ba:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	4a e7       	ldi	r20, 0x7A	; 122
     6c2:	53 e4       	ldi	r21, 0x43	; 67
     6c4:	39 d3       	rcall	.+1650   	; 0xd38 <__mulsf3>
     6c6:	7b 01       	movw	r14, r22
     6c8:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     6ca:	20 e0       	ldi	r18, 0x00	; 0
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	40 e8       	ldi	r20, 0x80	; 128
     6d0:	5f e3       	ldi	r21, 0x3F	; 63
     6d2:	7d d4       	rcall	.+2298   	; 0xfce <__ltsf2>
     6d4:	88 23       	and	r24, r24
     6d6:	1c f4       	brge	.+6      	; 0x6de <__stack+0x27f>
     6d8:	61 e0       	ldi	r22, 0x01	; 1
     6da:	70 e0       	ldi	r23, 0x00	; 0
     6dc:	1e c0       	rjmp	.+60     	; 0x71a <__stack+0x2bb>
		__ticks = 1;
	else if (__tmp > 65535)
     6de:	c8 01       	movw	r24, r16
     6e0:	b7 01       	movw	r22, r14
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	3f ef       	ldi	r19, 0xFF	; 255
     6e6:	4f e7       	ldi	r20, 0x7F	; 127
     6e8:	57 e4       	ldi	r21, 0x47	; 71
     6ea:	1b d4       	rcall	.+2102   	; 0xf22 <__gtsf2>
     6ec:	18 16       	cp	r1, r24
     6ee:	94 f4       	brge	.+36     	; 0x714 <__stack+0x2b5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6f0:	c6 01       	movw	r24, r12
     6f2:	b5 01       	movw	r22, r10
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	40 e2       	ldi	r20, 0x20	; 32
     6fa:	51 e4       	ldi	r21, 0x41	; 65
     6fc:	1d d3       	rcall	.+1594   	; 0xd38 <__mulsf3>
     6fe:	58 d1       	rcall	.+688    	; 0x9b0 <__fixunssfsi>
     700:	05 c0       	rjmp	.+10     	; 0x70c <__stack+0x2ad>
     702:	ce 01       	movw	r24, r28
     704:	01 97       	sbiw	r24, 0x01	; 1
     706:	f1 f7       	brne	.-4      	; 0x704 <__stack+0x2a5>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     708:	61 50       	subi	r22, 0x01	; 1
     70a:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     70c:	61 15       	cp	r22, r1
     70e:	71 05       	cpc	r23, r1
     710:	c1 f7       	brne	.-16     	; 0x702 <__stack+0x2a3>
     712:	06 c0       	rjmp	.+12     	; 0x720 <__stack+0x2c1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     714:	c8 01       	movw	r24, r16
     716:	b7 01       	movw	r22, r14
     718:	4b d1       	rcall	.+662    	; 0x9b0 <__fixunssfsi>
     71a:	cb 01       	movw	r24, r22
     71c:	01 97       	sbiw	r24, 0x01	; 1
     71e:	f1 f7       	brne	.-4      	; 0x71c <__stack+0x2bd>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     720:	c8 01       	movw	r24, r16
     722:	b7 01       	movw	r22, r14
     724:	20 e0       	ldi	r18, 0x00	; 0
     726:	30 e0       	ldi	r19, 0x00	; 0
     728:	40 e8       	ldi	r20, 0x80	; 128
     72a:	5f e3       	ldi	r21, 0x3F	; 63
     72c:	50 d4       	rcall	.+2208   	; 0xfce <__ltsf2>
     72e:	88 23       	and	r24, r24
     730:	1c f4       	brge	.+6      	; 0x738 <__stack+0x2d9>
     732:	61 e0       	ldi	r22, 0x01	; 1
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	1e c0       	rjmp	.+60     	; 0x774 <__stack+0x315>
		__ticks = 1;
	else if (__tmp > 65535)
     738:	c8 01       	movw	r24, r16
     73a:	b7 01       	movw	r22, r14
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	3f ef       	ldi	r19, 0xFF	; 255
     740:	4f e7       	ldi	r20, 0x7F	; 127
     742:	57 e4       	ldi	r21, 0x47	; 71
     744:	ee d3       	rcall	.+2012   	; 0xf22 <__gtsf2>
     746:	18 16       	cp	r1, r24
     748:	94 f4       	brge	.+36     	; 0x76e <__stack+0x30f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     74a:	c6 01       	movw	r24, r12
     74c:	b5 01       	movw	r22, r10
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	40 e2       	ldi	r20, 0x20	; 32
     754:	51 e4       	ldi	r21, 0x41	; 65
     756:	f0 d2       	rcall	.+1504   	; 0xd38 <__mulsf3>
     758:	2b d1       	rcall	.+598    	; 0x9b0 <__fixunssfsi>
     75a:	05 c0       	rjmp	.+10     	; 0x766 <__stack+0x307>
     75c:	ce 01       	movw	r24, r28
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	f1 f7       	brne	.-4      	; 0x75e <__stack+0x2ff>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     762:	61 50       	subi	r22, 0x01	; 1
     764:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     766:	61 15       	cp	r22, r1
     768:	71 05       	cpc	r23, r1
     76a:	c1 f7       	brne	.-16     	; 0x75c <__stack+0x2fd>
     76c:	06 c0       	rjmp	.+12     	; 0x77a <__stack+0x31b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     76e:	c8 01       	movw	r24, r16
     770:	b7 01       	movw	r22, r14
     772:	1e d1       	rcall	.+572    	; 0x9b0 <__fixunssfsi>
     774:	cb 01       	movw	r24, r22
     776:	01 97       	sbiw	r24, 0x01	; 1
     778:	f1 f7       	brne	.-4      	; 0x776 <__stack+0x317>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     77a:	c8 01       	movw	r24, r16
     77c:	b7 01       	movw	r22, r14
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	40 e8       	ldi	r20, 0x80	; 128
     784:	5f e3       	ldi	r21, 0x3F	; 63
     786:	23 d4       	rcall	.+2118   	; 0xfce <__ltsf2>
     788:	88 23       	and	r24, r24
     78a:	1c f4       	brge	.+6      	; 0x792 <__stack+0x333>
     78c:	61 e0       	ldi	r22, 0x01	; 1
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	1e c0       	rjmp	.+60     	; 0x7ce <__stack+0x36f>
		__ticks = 1;
	else if (__tmp > 65535)
     792:	c8 01       	movw	r24, r16
     794:	b7 01       	movw	r22, r14
     796:	20 e0       	ldi	r18, 0x00	; 0
     798:	3f ef       	ldi	r19, 0xFF	; 255
     79a:	4f e7       	ldi	r20, 0x7F	; 127
     79c:	57 e4       	ldi	r21, 0x47	; 71
     79e:	c1 d3       	rcall	.+1922   	; 0xf22 <__gtsf2>
     7a0:	18 16       	cp	r1, r24
     7a2:	94 f4       	brge	.+36     	; 0x7c8 <__stack+0x369>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7a4:	c6 01       	movw	r24, r12
     7a6:	b5 01       	movw	r22, r10
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	40 e2       	ldi	r20, 0x20	; 32
     7ae:	51 e4       	ldi	r21, 0x41	; 65
     7b0:	c3 d2       	rcall	.+1414   	; 0xd38 <__mulsf3>
     7b2:	fe d0       	rcall	.+508    	; 0x9b0 <__fixunssfsi>
     7b4:	05 c0       	rjmp	.+10     	; 0x7c0 <__stack+0x361>
     7b6:	ce 01       	movw	r24, r28
     7b8:	01 97       	sbiw	r24, 0x01	; 1
     7ba:	f1 f7       	brne	.-4      	; 0x7b8 <__stack+0x359>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7bc:	61 50       	subi	r22, 0x01	; 1
     7be:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7c0:	61 15       	cp	r22, r1
     7c2:	71 05       	cpc	r23, r1
     7c4:	c1 f7       	brne	.-16     	; 0x7b6 <__stack+0x357>
     7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <__stack+0x375>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7c8:	c8 01       	movw	r24, r16
     7ca:	b7 01       	movw	r22, r14
     7cc:	f1 d0       	rcall	.+482    	; 0x9b0 <__fixunssfsi>
     7ce:	cb 01       	movw	r24, r22
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	f1 f7       	brne	.-4      	; 0x7d0 <__stack+0x371>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     7d4:	c8 01       	movw	r24, r16
     7d6:	b7 01       	movw	r22, r14
     7d8:	20 e0       	ldi	r18, 0x00	; 0
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	40 e8       	ldi	r20, 0x80	; 128
     7de:	5f e3       	ldi	r21, 0x3F	; 63
     7e0:	f6 d3       	rcall	.+2028   	; 0xfce <__ltsf2>
     7e2:	88 23       	and	r24, r24
     7e4:	1c f4       	brge	.+6      	; 0x7ec <__stack+0x38d>
     7e6:	61 e0       	ldi	r22, 0x01	; 1
     7e8:	70 e0       	ldi	r23, 0x00	; 0
     7ea:	1e c0       	rjmp	.+60     	; 0x828 <__stack+0x3c9>
		__ticks = 1;
	else if (__tmp > 65535)
     7ec:	c8 01       	movw	r24, r16
     7ee:	b7 01       	movw	r22, r14
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	3f ef       	ldi	r19, 0xFF	; 255
     7f4:	4f e7       	ldi	r20, 0x7F	; 127
     7f6:	57 e4       	ldi	r21, 0x47	; 71
     7f8:	94 d3       	rcall	.+1832   	; 0xf22 <__gtsf2>
     7fa:	18 16       	cp	r1, r24
     7fc:	94 f4       	brge	.+36     	; 0x822 <__stack+0x3c3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7fe:	c6 01       	movw	r24, r12
     800:	b5 01       	movw	r22, r10
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	40 e2       	ldi	r20, 0x20	; 32
     808:	51 e4       	ldi	r21, 0x41	; 65
     80a:	96 d2       	rcall	.+1324   	; 0xd38 <__mulsf3>
     80c:	d1 d0       	rcall	.+418    	; 0x9b0 <__fixunssfsi>
     80e:	05 c0       	rjmp	.+10     	; 0x81a <__stack+0x3bb>
     810:	ce 01       	movw	r24, r28
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <__stack+0x3b3>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     816:	61 50       	subi	r22, 0x01	; 1
     818:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     81a:	61 15       	cp	r22, r1
     81c:	71 05       	cpc	r23, r1
     81e:	c1 f7       	brne	.-16     	; 0x810 <__stack+0x3b1>
     820:	06 c0       	rjmp	.+12     	; 0x82e <__stack+0x3cf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     822:	c8 01       	movw	r24, r16
     824:	b7 01       	movw	r22, r14
     826:	c4 d0       	rcall	.+392    	; 0x9b0 <__fixunssfsi>
     828:	cb 01       	movw	r24, r22
     82a:	01 97       	sbiw	r24, 0x01	; 1
     82c:	f1 f7       	brne	.-4      	; 0x82a <__stack+0x3cb>
   PORTB=0b00010000;
     82e:	80 e1       	ldi	r24, 0x10	; 16
     830:	88 bb       	out	0x18, r24	; 24
    _delay_ms(t);_delay_ms(t);_delay_ms(t);_delay_ms(t);
     832:	c2 01       	movw	r24, r4
     834:	b1 01       	movw	r22, r2
     836:	f6 d3       	rcall	.+2028   	; 0x1024 <__floatsisf>
     838:	5b 01       	movw	r10, r22
     83a:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     83c:	20 e0       	ldi	r18, 0x00	; 0
     83e:	30 e0       	ldi	r19, 0x00	; 0
     840:	4a e7       	ldi	r20, 0x7A	; 122
     842:	53 e4       	ldi	r21, 0x43	; 67
     844:	79 d2       	rcall	.+1266   	; 0xd38 <__mulsf3>
     846:	7b 01       	movw	r14, r22
     848:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     84a:	20 e0       	ldi	r18, 0x00	; 0
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	40 e8       	ldi	r20, 0x80	; 128
     850:	5f e3       	ldi	r21, 0x3F	; 63
     852:	bd d3       	rcall	.+1914   	; 0xfce <__ltsf2>
     854:	88 23       	and	r24, r24
     856:	1c f4       	brge	.+6      	; 0x85e <__stack+0x3ff>
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	1e c0       	rjmp	.+60     	; 0x89a <__stack+0x43b>
		__ticks = 1;
	else if (__tmp > 65535)
     85e:	c8 01       	movw	r24, r16
     860:	b7 01       	movw	r22, r14
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	3f ef       	ldi	r19, 0xFF	; 255
     866:	4f e7       	ldi	r20, 0x7F	; 127
     868:	57 e4       	ldi	r21, 0x47	; 71
     86a:	5b d3       	rcall	.+1718   	; 0xf22 <__gtsf2>
     86c:	18 16       	cp	r1, r24
     86e:	94 f4       	brge	.+36     	; 0x894 <__stack+0x435>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     870:	c6 01       	movw	r24, r12
     872:	b5 01       	movw	r22, r10
     874:	20 e0       	ldi	r18, 0x00	; 0
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	40 e2       	ldi	r20, 0x20	; 32
     87a:	51 e4       	ldi	r21, 0x41	; 65
     87c:	5d d2       	rcall	.+1210   	; 0xd38 <__mulsf3>
     87e:	98 d0       	rcall	.+304    	; 0x9b0 <__fixunssfsi>
     880:	05 c0       	rjmp	.+10     	; 0x88c <__stack+0x42d>
     882:	ce 01       	movw	r24, r28
     884:	01 97       	sbiw	r24, 0x01	; 1
     886:	f1 f7       	brne	.-4      	; 0x884 <__stack+0x425>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     888:	61 50       	subi	r22, 0x01	; 1
     88a:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     88c:	61 15       	cp	r22, r1
     88e:	71 05       	cpc	r23, r1
     890:	c1 f7       	brne	.-16     	; 0x882 <__stack+0x423>
     892:	06 c0       	rjmp	.+12     	; 0x8a0 <__stack+0x441>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     894:	c8 01       	movw	r24, r16
     896:	b7 01       	movw	r22, r14
     898:	8b d0       	rcall	.+278    	; 0x9b0 <__fixunssfsi>
     89a:	cb 01       	movw	r24, r22
     89c:	01 97       	sbiw	r24, 0x01	; 1
     89e:	f1 f7       	brne	.-4      	; 0x89c <__stack+0x43d>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     8a0:	c8 01       	movw	r24, r16
     8a2:	b7 01       	movw	r22, r14
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	40 e8       	ldi	r20, 0x80	; 128
     8aa:	5f e3       	ldi	r21, 0x3F	; 63
     8ac:	90 d3       	rcall	.+1824   	; 0xfce <__ltsf2>
     8ae:	88 23       	and	r24, r24
     8b0:	1c f4       	brge	.+6      	; 0x8b8 <__stack+0x459>
     8b2:	61 e0       	ldi	r22, 0x01	; 1
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	1e c0       	rjmp	.+60     	; 0x8f4 <__stack+0x495>
		__ticks = 1;
	else if (__tmp > 65535)
     8b8:	c8 01       	movw	r24, r16
     8ba:	b7 01       	movw	r22, r14
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	3f ef       	ldi	r19, 0xFF	; 255
     8c0:	4f e7       	ldi	r20, 0x7F	; 127
     8c2:	57 e4       	ldi	r21, 0x47	; 71
     8c4:	2e d3       	rcall	.+1628   	; 0xf22 <__gtsf2>
     8c6:	18 16       	cp	r1, r24
     8c8:	94 f4       	brge	.+36     	; 0x8ee <__stack+0x48f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8ca:	c6 01       	movw	r24, r12
     8cc:	b5 01       	movw	r22, r10
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	40 e2       	ldi	r20, 0x20	; 32
     8d4:	51 e4       	ldi	r21, 0x41	; 65
     8d6:	30 d2       	rcall	.+1120   	; 0xd38 <__mulsf3>
     8d8:	6b d0       	rcall	.+214    	; 0x9b0 <__fixunssfsi>
     8da:	05 c0       	rjmp	.+10     	; 0x8e6 <__stack+0x487>
     8dc:	ce 01       	movw	r24, r28
     8de:	01 97       	sbiw	r24, 0x01	; 1
     8e0:	f1 f7       	brne	.-4      	; 0x8de <__stack+0x47f>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8e2:	61 50       	subi	r22, 0x01	; 1
     8e4:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8e6:	61 15       	cp	r22, r1
     8e8:	71 05       	cpc	r23, r1
     8ea:	c1 f7       	brne	.-16     	; 0x8dc <__stack+0x47d>
     8ec:	06 c0       	rjmp	.+12     	; 0x8fa <__stack+0x49b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8ee:	c8 01       	movw	r24, r16
     8f0:	b7 01       	movw	r22, r14
     8f2:	5e d0       	rcall	.+188    	; 0x9b0 <__fixunssfsi>
     8f4:	cb 01       	movw	r24, r22
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <__stack+0x497>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     8fa:	c8 01       	movw	r24, r16
     8fc:	b7 01       	movw	r22, r14
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	40 e8       	ldi	r20, 0x80	; 128
     904:	5f e3       	ldi	r21, 0x3F	; 63
     906:	63 d3       	rcall	.+1734   	; 0xfce <__ltsf2>
     908:	88 23       	and	r24, r24
     90a:	1c f4       	brge	.+6      	; 0x912 <__stack+0x4b3>
     90c:	61 e0       	ldi	r22, 0x01	; 1
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	1e c0       	rjmp	.+60     	; 0x94e <__stack+0x4ef>
		__ticks = 1;
	else if (__tmp > 65535)
     912:	c8 01       	movw	r24, r16
     914:	b7 01       	movw	r22, r14
     916:	20 e0       	ldi	r18, 0x00	; 0
     918:	3f ef       	ldi	r19, 0xFF	; 255
     91a:	4f e7       	ldi	r20, 0x7F	; 127
     91c:	57 e4       	ldi	r21, 0x47	; 71
     91e:	01 d3       	rcall	.+1538   	; 0xf22 <__gtsf2>
     920:	18 16       	cp	r1, r24
     922:	94 f4       	brge	.+36     	; 0x948 <__stack+0x4e9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     924:	c6 01       	movw	r24, r12
     926:	b5 01       	movw	r22, r10
     928:	20 e0       	ldi	r18, 0x00	; 0
     92a:	30 e0       	ldi	r19, 0x00	; 0
     92c:	40 e2       	ldi	r20, 0x20	; 32
     92e:	51 e4       	ldi	r21, 0x41	; 65
     930:	03 d2       	rcall	.+1030   	; 0xd38 <__mulsf3>
     932:	3e d0       	rcall	.+124    	; 0x9b0 <__fixunssfsi>
     934:	05 c0       	rjmp	.+10     	; 0x940 <__stack+0x4e1>
     936:	ce 01       	movw	r24, r28
     938:	01 97       	sbiw	r24, 0x01	; 1
     93a:	f1 f7       	brne	.-4      	; 0x938 <__stack+0x4d9>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     93c:	61 50       	subi	r22, 0x01	; 1
     93e:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     940:	61 15       	cp	r22, r1
     942:	71 05       	cpc	r23, r1
     944:	c1 f7       	brne	.-16     	; 0x936 <__stack+0x4d7>
     946:	06 c0       	rjmp	.+12     	; 0x954 <__stack+0x4f5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     948:	c8 01       	movw	r24, r16
     94a:	b7 01       	movw	r22, r14
     94c:	31 d0       	rcall	.+98     	; 0x9b0 <__fixunssfsi>
     94e:	cb 01       	movw	r24, r22
     950:	01 97       	sbiw	r24, 0x01	; 1
     952:	f1 f7       	brne	.-4      	; 0x950 <__stack+0x4f1>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     954:	c8 01       	movw	r24, r16
     956:	b7 01       	movw	r22, r14
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	40 e8       	ldi	r20, 0x80	; 128
     95e:	5f e3       	ldi	r21, 0x3F	; 63
     960:	36 d3       	rcall	.+1644   	; 0xfce <__ltsf2>
     962:	88 23       	and	r24, r24
     964:	1c f4       	brge	.+6      	; 0x96c <__stack+0x50d>
     966:	61 e0       	ldi	r22, 0x01	; 1
     968:	70 e0       	ldi	r23, 0x00	; 0
     96a:	1e c0       	rjmp	.+60     	; 0x9a8 <__stack+0x549>
		__ticks = 1;
	else if (__tmp > 65535)
     96c:	c8 01       	movw	r24, r16
     96e:	b7 01       	movw	r22, r14
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	3f ef       	ldi	r19, 0xFF	; 255
     974:	4f e7       	ldi	r20, 0x7F	; 127
     976:	57 e4       	ldi	r21, 0x47	; 71
     978:	d4 d2       	rcall	.+1448   	; 0xf22 <__gtsf2>
     97a:	18 16       	cp	r1, r24
     97c:	94 f4       	brge	.+36     	; 0x9a2 <__stack+0x543>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     97e:	c6 01       	movw	r24, r12
     980:	b5 01       	movw	r22, r10
     982:	20 e0       	ldi	r18, 0x00	; 0
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	40 e2       	ldi	r20, 0x20	; 32
     988:	51 e4       	ldi	r21, 0x41	; 65
     98a:	d6 d1       	rcall	.+940    	; 0xd38 <__mulsf3>
     98c:	11 d0       	rcall	.+34     	; 0x9b0 <__fixunssfsi>
     98e:	05 c0       	rjmp	.+10     	; 0x99a <__stack+0x53b>
     990:	ce 01       	movw	r24, r28
     992:	01 97       	sbiw	r24, 0x01	; 1
     994:	f1 f7       	brne	.-4      	; 0x992 <__stack+0x533>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     996:	61 50       	subi	r22, 0x01	; 1
     998:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     99a:	61 15       	cp	r22, r1
     99c:	71 05       	cpc	r23, r1
     99e:	c1 f7       	brne	.-16     	; 0x990 <__stack+0x531>
     9a0:	7f cb       	rjmp	.-2306   	; 0xa0 <main+0x52>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9a2:	c8 01       	movw	r24, r16
     9a4:	b7 01       	movw	r22, r14
     9a6:	04 d0       	rcall	.+8      	; 0x9b0 <__fixunssfsi>
     9a8:	cb 01       	movw	r24, r22
     9aa:	01 97       	sbiw	r24, 0x01	; 1
     9ac:	f1 f7       	brne	.-4      	; 0x9aa <__stack+0x54b>
     9ae:	78 cb       	rjmp	.-2320   	; 0xa0 <main+0x52>

000009b0 <__fixunssfsi>:
     9b0:	ef 92       	push	r14
     9b2:	ff 92       	push	r15
     9b4:	0f 93       	push	r16
     9b6:	1f 93       	push	r17
     9b8:	7b 01       	movw	r14, r22
     9ba:	8c 01       	movw	r16, r24
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	40 e0       	ldi	r20, 0x00	; 0
     9c2:	5f e4       	ldi	r21, 0x4F	; 79
     9c4:	d9 d2       	rcall	.+1458   	; 0xf78 <__gesf2>
     9c6:	88 23       	and	r24, r24
     9c8:	7c f0       	brlt	.+30     	; 0x9e8 <__fixunssfsi+0x38>
     9ca:	c8 01       	movw	r24, r16
     9cc:	b7 01       	movw	r22, r14
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	40 e0       	ldi	r20, 0x00	; 0
     9d4:	5f e4       	ldi	r21, 0x4F	; 79
     9d6:	5e d1       	rcall	.+700    	; 0xc94 <__subsf3>
     9d8:	7f d3       	rcall	.+1790   	; 0x10d8 <__fixsfsi>
     9da:	9b 01       	movw	r18, r22
     9dc:	ac 01       	movw	r20, r24
     9de:	20 50       	subi	r18, 0x00	; 0
     9e0:	30 40       	sbci	r19, 0x00	; 0
     9e2:	40 40       	sbci	r20, 0x00	; 0
     9e4:	50 48       	sbci	r21, 0x80	; 128
     9e6:	05 c0       	rjmp	.+10     	; 0x9f2 <__fixunssfsi+0x42>
     9e8:	c8 01       	movw	r24, r16
     9ea:	b7 01       	movw	r22, r14
     9ec:	75 d3       	rcall	.+1770   	; 0x10d8 <__fixsfsi>
     9ee:	9b 01       	movw	r18, r22
     9f0:	ac 01       	movw	r20, r24
     9f2:	b9 01       	movw	r22, r18
     9f4:	ca 01       	movw	r24, r20
     9f6:	1f 91       	pop	r17
     9f8:	0f 91       	pop	r16
     9fa:	ff 90       	pop	r15
     9fc:	ef 90       	pop	r14
     9fe:	08 95       	ret

00000a00 <_fpadd_parts>:
     a00:	a0 e0       	ldi	r26, 0x00	; 0
     a02:	b0 e0       	ldi	r27, 0x00	; 0
     a04:	e5 e0       	ldi	r30, 0x05	; 5
     a06:	f5 e0       	ldi	r31, 0x05	; 5
     a08:	ad c5       	rjmp	.+2906   	; 0x1564 <__prologue_saves__>
     a0a:	dc 01       	movw	r26, r24
     a0c:	2b 01       	movw	r4, r22
     a0e:	fa 01       	movw	r30, r20
     a10:	9c 91       	ld	r25, X
     a12:	92 30       	cpi	r25, 0x02	; 2
     a14:	08 f4       	brcc	.+2      	; 0xa18 <_fpadd_parts+0x18>
     a16:	39 c1       	rjmp	.+626    	; 0xc8a <_fpadd_parts+0x28a>
     a18:	eb 01       	movw	r28, r22
     a1a:	88 81       	ld	r24, Y
     a1c:	82 30       	cpi	r24, 0x02	; 2
     a1e:	08 f4       	brcc	.+2      	; 0xa22 <_fpadd_parts+0x22>
     a20:	33 c1       	rjmp	.+614    	; 0xc88 <_fpadd_parts+0x288>
     a22:	94 30       	cpi	r25, 0x04	; 4
     a24:	69 f4       	brne	.+26     	; 0xa40 <_fpadd_parts+0x40>
     a26:	84 30       	cpi	r24, 0x04	; 4
     a28:	09 f0       	breq	.+2      	; 0xa2c <_fpadd_parts+0x2c>
     a2a:	2f c1       	rjmp	.+606    	; 0xc8a <_fpadd_parts+0x28a>
     a2c:	11 96       	adiw	r26, 0x01	; 1
     a2e:	9c 91       	ld	r25, X
     a30:	11 97       	sbiw	r26, 0x01	; 1
     a32:	89 81       	ldd	r24, Y+1	; 0x01
     a34:	98 17       	cp	r25, r24
     a36:	09 f4       	brne	.+2      	; 0xa3a <_fpadd_parts+0x3a>
     a38:	28 c1       	rjmp	.+592    	; 0xc8a <_fpadd_parts+0x28a>
     a3a:	a4 e6       	ldi	r26, 0x64	; 100
     a3c:	b0 e0       	ldi	r27, 0x00	; 0
     a3e:	25 c1       	rjmp	.+586    	; 0xc8a <_fpadd_parts+0x28a>
     a40:	84 30       	cpi	r24, 0x04	; 4
     a42:	09 f4       	brne	.+2      	; 0xa46 <_fpadd_parts+0x46>
     a44:	21 c1       	rjmp	.+578    	; 0xc88 <_fpadd_parts+0x288>
     a46:	82 30       	cpi	r24, 0x02	; 2
     a48:	a9 f4       	brne	.+42     	; 0xa74 <_fpadd_parts+0x74>
     a4a:	92 30       	cpi	r25, 0x02	; 2
     a4c:	09 f0       	breq	.+2      	; 0xa50 <_fpadd_parts+0x50>
     a4e:	1d c1       	rjmp	.+570    	; 0xc8a <_fpadd_parts+0x28a>
     a50:	9a 01       	movw	r18, r20
     a52:	ad 01       	movw	r20, r26
     a54:	88 e0       	ldi	r24, 0x08	; 8
     a56:	ea 01       	movw	r28, r20
     a58:	09 90       	ld	r0, Y+
     a5a:	ae 01       	movw	r20, r28
     a5c:	e9 01       	movw	r28, r18
     a5e:	09 92       	st	Y+, r0
     a60:	9e 01       	movw	r18, r28
     a62:	81 50       	subi	r24, 0x01	; 1
     a64:	c1 f7       	brne	.-16     	; 0xa56 <_fpadd_parts+0x56>
     a66:	e2 01       	movw	r28, r4
     a68:	89 81       	ldd	r24, Y+1	; 0x01
     a6a:	11 96       	adiw	r26, 0x01	; 1
     a6c:	9c 91       	ld	r25, X
     a6e:	89 23       	and	r24, r25
     a70:	81 83       	std	Z+1, r24	; 0x01
     a72:	08 c1       	rjmp	.+528    	; 0xc84 <_fpadd_parts+0x284>
     a74:	92 30       	cpi	r25, 0x02	; 2
     a76:	09 f4       	brne	.+2      	; 0xa7a <_fpadd_parts+0x7a>
     a78:	07 c1       	rjmp	.+526    	; 0xc88 <_fpadd_parts+0x288>
     a7a:	12 96       	adiw	r26, 0x02	; 2
     a7c:	2d 90       	ld	r2, X+
     a7e:	3c 90       	ld	r3, X
     a80:	13 97       	sbiw	r26, 0x03	; 3
     a82:	eb 01       	movw	r28, r22
     a84:	8a 81       	ldd	r24, Y+2	; 0x02
     a86:	9b 81       	ldd	r25, Y+3	; 0x03
     a88:	14 96       	adiw	r26, 0x04	; 4
     a8a:	ad 90       	ld	r10, X+
     a8c:	bd 90       	ld	r11, X+
     a8e:	cd 90       	ld	r12, X+
     a90:	dc 90       	ld	r13, X
     a92:	17 97       	sbiw	r26, 0x07	; 7
     a94:	ec 80       	ldd	r14, Y+4	; 0x04
     a96:	fd 80       	ldd	r15, Y+5	; 0x05
     a98:	0e 81       	ldd	r16, Y+6	; 0x06
     a9a:	1f 81       	ldd	r17, Y+7	; 0x07
     a9c:	91 01       	movw	r18, r2
     a9e:	28 1b       	sub	r18, r24
     aa0:	39 0b       	sbc	r19, r25
     aa2:	b9 01       	movw	r22, r18
     aa4:	37 ff       	sbrs	r19, 7
     aa6:	04 c0       	rjmp	.+8      	; 0xab0 <_fpadd_parts+0xb0>
     aa8:	66 27       	eor	r22, r22
     aaa:	77 27       	eor	r23, r23
     aac:	62 1b       	sub	r22, r18
     aae:	73 0b       	sbc	r23, r19
     ab0:	60 32       	cpi	r22, 0x20	; 32
     ab2:	71 05       	cpc	r23, r1
     ab4:	0c f0       	brlt	.+2      	; 0xab8 <_fpadd_parts+0xb8>
     ab6:	61 c0       	rjmp	.+194    	; 0xb7a <_fpadd_parts+0x17a>
     ab8:	12 16       	cp	r1, r18
     aba:	13 06       	cpc	r1, r19
     abc:	6c f5       	brge	.+90     	; 0xb18 <_fpadd_parts+0x118>
     abe:	37 01       	movw	r6, r14
     ac0:	48 01       	movw	r8, r16
     ac2:	06 2e       	mov	r0, r22
     ac4:	04 c0       	rjmp	.+8      	; 0xace <_fpadd_parts+0xce>
     ac6:	96 94       	lsr	r9
     ac8:	87 94       	ror	r8
     aca:	77 94       	ror	r7
     acc:	67 94       	ror	r6
     ace:	0a 94       	dec	r0
     ad0:	d2 f7       	brpl	.-12     	; 0xac6 <_fpadd_parts+0xc6>
     ad2:	21 e0       	ldi	r18, 0x01	; 1
     ad4:	30 e0       	ldi	r19, 0x00	; 0
     ad6:	40 e0       	ldi	r20, 0x00	; 0
     ad8:	50 e0       	ldi	r21, 0x00	; 0
     ada:	04 c0       	rjmp	.+8      	; 0xae4 <_fpadd_parts+0xe4>
     adc:	22 0f       	add	r18, r18
     ade:	33 1f       	adc	r19, r19
     ae0:	44 1f       	adc	r20, r20
     ae2:	55 1f       	adc	r21, r21
     ae4:	6a 95       	dec	r22
     ae6:	d2 f7       	brpl	.-12     	; 0xadc <_fpadd_parts+0xdc>
     ae8:	21 50       	subi	r18, 0x01	; 1
     aea:	30 40       	sbci	r19, 0x00	; 0
     aec:	40 40       	sbci	r20, 0x00	; 0
     aee:	50 40       	sbci	r21, 0x00	; 0
     af0:	2e 21       	and	r18, r14
     af2:	3f 21       	and	r19, r15
     af4:	40 23       	and	r20, r16
     af6:	51 23       	and	r21, r17
     af8:	21 15       	cp	r18, r1
     afa:	31 05       	cpc	r19, r1
     afc:	41 05       	cpc	r20, r1
     afe:	51 05       	cpc	r21, r1
     b00:	21 f0       	breq	.+8      	; 0xb0a <_fpadd_parts+0x10a>
     b02:	21 e0       	ldi	r18, 0x01	; 1
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e0       	ldi	r20, 0x00	; 0
     b08:	50 e0       	ldi	r21, 0x00	; 0
     b0a:	79 01       	movw	r14, r18
     b0c:	8a 01       	movw	r16, r20
     b0e:	e6 28       	or	r14, r6
     b10:	f7 28       	or	r15, r7
     b12:	08 29       	or	r16, r8
     b14:	19 29       	or	r17, r9
     b16:	3c c0       	rjmp	.+120    	; 0xb90 <_fpadd_parts+0x190>
     b18:	23 2b       	or	r18, r19
     b1a:	d1 f1       	breq	.+116    	; 0xb90 <_fpadd_parts+0x190>
     b1c:	26 0e       	add	r2, r22
     b1e:	37 1e       	adc	r3, r23
     b20:	35 01       	movw	r6, r10
     b22:	46 01       	movw	r8, r12
     b24:	06 2e       	mov	r0, r22
     b26:	04 c0       	rjmp	.+8      	; 0xb30 <_fpadd_parts+0x130>
     b28:	96 94       	lsr	r9
     b2a:	87 94       	ror	r8
     b2c:	77 94       	ror	r7
     b2e:	67 94       	ror	r6
     b30:	0a 94       	dec	r0
     b32:	d2 f7       	brpl	.-12     	; 0xb28 <_fpadd_parts+0x128>
     b34:	21 e0       	ldi	r18, 0x01	; 1
     b36:	30 e0       	ldi	r19, 0x00	; 0
     b38:	40 e0       	ldi	r20, 0x00	; 0
     b3a:	50 e0       	ldi	r21, 0x00	; 0
     b3c:	04 c0       	rjmp	.+8      	; 0xb46 <_fpadd_parts+0x146>
     b3e:	22 0f       	add	r18, r18
     b40:	33 1f       	adc	r19, r19
     b42:	44 1f       	adc	r20, r20
     b44:	55 1f       	adc	r21, r21
     b46:	6a 95       	dec	r22
     b48:	d2 f7       	brpl	.-12     	; 0xb3e <_fpadd_parts+0x13e>
     b4a:	21 50       	subi	r18, 0x01	; 1
     b4c:	30 40       	sbci	r19, 0x00	; 0
     b4e:	40 40       	sbci	r20, 0x00	; 0
     b50:	50 40       	sbci	r21, 0x00	; 0
     b52:	2a 21       	and	r18, r10
     b54:	3b 21       	and	r19, r11
     b56:	4c 21       	and	r20, r12
     b58:	5d 21       	and	r21, r13
     b5a:	21 15       	cp	r18, r1
     b5c:	31 05       	cpc	r19, r1
     b5e:	41 05       	cpc	r20, r1
     b60:	51 05       	cpc	r21, r1
     b62:	21 f0       	breq	.+8      	; 0xb6c <_fpadd_parts+0x16c>
     b64:	21 e0       	ldi	r18, 0x01	; 1
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	40 e0       	ldi	r20, 0x00	; 0
     b6a:	50 e0       	ldi	r21, 0x00	; 0
     b6c:	59 01       	movw	r10, r18
     b6e:	6a 01       	movw	r12, r20
     b70:	a6 28       	or	r10, r6
     b72:	b7 28       	or	r11, r7
     b74:	c8 28       	or	r12, r8
     b76:	d9 28       	or	r13, r9
     b78:	0b c0       	rjmp	.+22     	; 0xb90 <_fpadd_parts+0x190>
     b7a:	82 15       	cp	r24, r2
     b7c:	93 05       	cpc	r25, r3
     b7e:	2c f0       	brlt	.+10     	; 0xb8a <_fpadd_parts+0x18a>
     b80:	1c 01       	movw	r2, r24
     b82:	aa 24       	eor	r10, r10
     b84:	bb 24       	eor	r11, r11
     b86:	65 01       	movw	r12, r10
     b88:	03 c0       	rjmp	.+6      	; 0xb90 <_fpadd_parts+0x190>
     b8a:	ee 24       	eor	r14, r14
     b8c:	ff 24       	eor	r15, r15
     b8e:	87 01       	movw	r16, r14
     b90:	11 96       	adiw	r26, 0x01	; 1
     b92:	9c 91       	ld	r25, X
     b94:	d2 01       	movw	r26, r4
     b96:	11 96       	adiw	r26, 0x01	; 1
     b98:	8c 91       	ld	r24, X
     b9a:	98 17       	cp	r25, r24
     b9c:	09 f4       	brne	.+2      	; 0xba0 <_fpadd_parts+0x1a0>
     b9e:	45 c0       	rjmp	.+138    	; 0xc2a <_fpadd_parts+0x22a>
     ba0:	99 23       	and	r25, r25
     ba2:	39 f0       	breq	.+14     	; 0xbb2 <_fpadd_parts+0x1b2>
     ba4:	a8 01       	movw	r20, r16
     ba6:	97 01       	movw	r18, r14
     ba8:	2a 19       	sub	r18, r10
     baa:	3b 09       	sbc	r19, r11
     bac:	4c 09       	sbc	r20, r12
     bae:	5d 09       	sbc	r21, r13
     bb0:	06 c0       	rjmp	.+12     	; 0xbbe <_fpadd_parts+0x1be>
     bb2:	a6 01       	movw	r20, r12
     bb4:	95 01       	movw	r18, r10
     bb6:	2e 19       	sub	r18, r14
     bb8:	3f 09       	sbc	r19, r15
     bba:	40 0b       	sbc	r20, r16
     bbc:	51 0b       	sbc	r21, r17
     bbe:	57 fd       	sbrc	r21, 7
     bc0:	08 c0       	rjmp	.+16     	; 0xbd2 <_fpadd_parts+0x1d2>
     bc2:	11 82       	std	Z+1, r1	; 0x01
     bc4:	33 82       	std	Z+3, r3	; 0x03
     bc6:	22 82       	std	Z+2, r2	; 0x02
     bc8:	24 83       	std	Z+4, r18	; 0x04
     bca:	35 83       	std	Z+5, r19	; 0x05
     bcc:	46 83       	std	Z+6, r20	; 0x06
     bce:	57 83       	std	Z+7, r21	; 0x07
     bd0:	1d c0       	rjmp	.+58     	; 0xc0c <_fpadd_parts+0x20c>
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	81 83       	std	Z+1, r24	; 0x01
     bd6:	33 82       	std	Z+3, r3	; 0x03
     bd8:	22 82       	std	Z+2, r2	; 0x02
     bda:	88 27       	eor	r24, r24
     bdc:	99 27       	eor	r25, r25
     bde:	dc 01       	movw	r26, r24
     be0:	82 1b       	sub	r24, r18
     be2:	93 0b       	sbc	r25, r19
     be4:	a4 0b       	sbc	r26, r20
     be6:	b5 0b       	sbc	r27, r21
     be8:	84 83       	std	Z+4, r24	; 0x04
     bea:	95 83       	std	Z+5, r25	; 0x05
     bec:	a6 83       	std	Z+6, r26	; 0x06
     bee:	b7 83       	std	Z+7, r27	; 0x07
     bf0:	0d c0       	rjmp	.+26     	; 0xc0c <_fpadd_parts+0x20c>
     bf2:	22 0f       	add	r18, r18
     bf4:	33 1f       	adc	r19, r19
     bf6:	44 1f       	adc	r20, r20
     bf8:	55 1f       	adc	r21, r21
     bfa:	24 83       	std	Z+4, r18	; 0x04
     bfc:	35 83       	std	Z+5, r19	; 0x05
     bfe:	46 83       	std	Z+6, r20	; 0x06
     c00:	57 83       	std	Z+7, r21	; 0x07
     c02:	82 81       	ldd	r24, Z+2	; 0x02
     c04:	93 81       	ldd	r25, Z+3	; 0x03
     c06:	01 97       	sbiw	r24, 0x01	; 1
     c08:	93 83       	std	Z+3, r25	; 0x03
     c0a:	82 83       	std	Z+2, r24	; 0x02
     c0c:	24 81       	ldd	r18, Z+4	; 0x04
     c0e:	35 81       	ldd	r19, Z+5	; 0x05
     c10:	46 81       	ldd	r20, Z+6	; 0x06
     c12:	57 81       	ldd	r21, Z+7	; 0x07
     c14:	da 01       	movw	r26, r20
     c16:	c9 01       	movw	r24, r18
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	a1 09       	sbc	r26, r1
     c1c:	b1 09       	sbc	r27, r1
     c1e:	8f 5f       	subi	r24, 0xFF	; 255
     c20:	9f 4f       	sbci	r25, 0xFF	; 255
     c22:	af 4f       	sbci	r26, 0xFF	; 255
     c24:	bf 43       	sbci	r27, 0x3F	; 63
     c26:	28 f3       	brcs	.-54     	; 0xbf2 <_fpadd_parts+0x1f2>
     c28:	0b c0       	rjmp	.+22     	; 0xc40 <_fpadd_parts+0x240>
     c2a:	91 83       	std	Z+1, r25	; 0x01
     c2c:	33 82       	std	Z+3, r3	; 0x03
     c2e:	22 82       	std	Z+2, r2	; 0x02
     c30:	ea 0c       	add	r14, r10
     c32:	fb 1c       	adc	r15, r11
     c34:	0c 1d       	adc	r16, r12
     c36:	1d 1d       	adc	r17, r13
     c38:	e4 82       	std	Z+4, r14	; 0x04
     c3a:	f5 82       	std	Z+5, r15	; 0x05
     c3c:	06 83       	std	Z+6, r16	; 0x06
     c3e:	17 83       	std	Z+7, r17	; 0x07
     c40:	83 e0       	ldi	r24, 0x03	; 3
     c42:	80 83       	st	Z, r24
     c44:	24 81       	ldd	r18, Z+4	; 0x04
     c46:	35 81       	ldd	r19, Z+5	; 0x05
     c48:	46 81       	ldd	r20, Z+6	; 0x06
     c4a:	57 81       	ldd	r21, Z+7	; 0x07
     c4c:	57 ff       	sbrs	r21, 7
     c4e:	1a c0       	rjmp	.+52     	; 0xc84 <_fpadd_parts+0x284>
     c50:	c9 01       	movw	r24, r18
     c52:	aa 27       	eor	r26, r26
     c54:	97 fd       	sbrc	r25, 7
     c56:	a0 95       	com	r26
     c58:	ba 2f       	mov	r27, r26
     c5a:	81 70       	andi	r24, 0x01	; 1
     c5c:	90 70       	andi	r25, 0x00	; 0
     c5e:	a0 70       	andi	r26, 0x00	; 0
     c60:	b0 70       	andi	r27, 0x00	; 0
     c62:	56 95       	lsr	r21
     c64:	47 95       	ror	r20
     c66:	37 95       	ror	r19
     c68:	27 95       	ror	r18
     c6a:	82 2b       	or	r24, r18
     c6c:	93 2b       	or	r25, r19
     c6e:	a4 2b       	or	r26, r20
     c70:	b5 2b       	or	r27, r21
     c72:	84 83       	std	Z+4, r24	; 0x04
     c74:	95 83       	std	Z+5, r25	; 0x05
     c76:	a6 83       	std	Z+6, r26	; 0x06
     c78:	b7 83       	std	Z+7, r27	; 0x07
     c7a:	82 81       	ldd	r24, Z+2	; 0x02
     c7c:	93 81       	ldd	r25, Z+3	; 0x03
     c7e:	01 96       	adiw	r24, 0x01	; 1
     c80:	93 83       	std	Z+3, r25	; 0x03
     c82:	82 83       	std	Z+2, r24	; 0x02
     c84:	df 01       	movw	r26, r30
     c86:	01 c0       	rjmp	.+2      	; 0xc8a <_fpadd_parts+0x28a>
     c88:	d2 01       	movw	r26, r4
     c8a:	cd 01       	movw	r24, r26
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	e2 e1       	ldi	r30, 0x12	; 18
     c92:	84 c4       	rjmp	.+2312   	; 0x159c <__epilogue_restores__>

00000c94 <__subsf3>:
     c94:	a0 e2       	ldi	r26, 0x20	; 32
     c96:	b0 e0       	ldi	r27, 0x00	; 0
     c98:	ef e4       	ldi	r30, 0x4F	; 79
     c9a:	f6 e0       	ldi	r31, 0x06	; 6
     c9c:	6f c4       	rjmp	.+2270   	; 0x157c <__prologue_saves__+0x18>
     c9e:	69 83       	std	Y+1, r22	; 0x01
     ca0:	7a 83       	std	Y+2, r23	; 0x02
     ca2:	8b 83       	std	Y+3, r24	; 0x03
     ca4:	9c 83       	std	Y+4, r25	; 0x04
     ca6:	2d 83       	std	Y+5, r18	; 0x05
     ca8:	3e 83       	std	Y+6, r19	; 0x06
     caa:	4f 83       	std	Y+7, r20	; 0x07
     cac:	58 87       	std	Y+8, r21	; 0x08
     cae:	e9 e0       	ldi	r30, 0x09	; 9
     cb0:	ee 2e       	mov	r14, r30
     cb2:	f1 2c       	mov	r15, r1
     cb4:	ec 0e       	add	r14, r28
     cb6:	fd 1e       	adc	r15, r29
     cb8:	ce 01       	movw	r24, r28
     cba:	01 96       	adiw	r24, 0x01	; 1
     cbc:	b7 01       	movw	r22, r14
     cbe:	81 d3       	rcall	.+1794   	; 0x13c2 <__unpack_f>
     cc0:	8e 01       	movw	r16, r28
     cc2:	0f 5e       	subi	r16, 0xEF	; 239
     cc4:	1f 4f       	sbci	r17, 0xFF	; 255
     cc6:	ce 01       	movw	r24, r28
     cc8:	05 96       	adiw	r24, 0x05	; 5
     cca:	b8 01       	movw	r22, r16
     ccc:	7a d3       	rcall	.+1780   	; 0x13c2 <__unpack_f>
     cce:	8a 89       	ldd	r24, Y+18	; 0x12
     cd0:	91 e0       	ldi	r25, 0x01	; 1
     cd2:	89 27       	eor	r24, r25
     cd4:	8a 8b       	std	Y+18, r24	; 0x12
     cd6:	c7 01       	movw	r24, r14
     cd8:	b8 01       	movw	r22, r16
     cda:	ae 01       	movw	r20, r28
     cdc:	47 5e       	subi	r20, 0xE7	; 231
     cde:	5f 4f       	sbci	r21, 0xFF	; 255
     ce0:	8f de       	rcall	.-738    	; 0xa00 <_fpadd_parts>
     ce2:	9a d2       	rcall	.+1332   	; 0x1218 <__pack_f>
     ce4:	a0 96       	adiw	r28, 0x20	; 32
     ce6:	e6 e0       	ldi	r30, 0x06	; 6
     ce8:	65 c4       	rjmp	.+2250   	; 0x15b4 <__epilogue_restores__+0x18>

00000cea <__addsf3>:
     cea:	a0 e2       	ldi	r26, 0x20	; 32
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	ea e7       	ldi	r30, 0x7A	; 122
     cf0:	f6 e0       	ldi	r31, 0x06	; 6
     cf2:	44 c4       	rjmp	.+2184   	; 0x157c <__prologue_saves__+0x18>
     cf4:	69 83       	std	Y+1, r22	; 0x01
     cf6:	7a 83       	std	Y+2, r23	; 0x02
     cf8:	8b 83       	std	Y+3, r24	; 0x03
     cfa:	9c 83       	std	Y+4, r25	; 0x04
     cfc:	2d 83       	std	Y+5, r18	; 0x05
     cfe:	3e 83       	std	Y+6, r19	; 0x06
     d00:	4f 83       	std	Y+7, r20	; 0x07
     d02:	58 87       	std	Y+8, r21	; 0x08
     d04:	f9 e0       	ldi	r31, 0x09	; 9
     d06:	ef 2e       	mov	r14, r31
     d08:	f1 2c       	mov	r15, r1
     d0a:	ec 0e       	add	r14, r28
     d0c:	fd 1e       	adc	r15, r29
     d0e:	ce 01       	movw	r24, r28
     d10:	01 96       	adiw	r24, 0x01	; 1
     d12:	b7 01       	movw	r22, r14
     d14:	56 d3       	rcall	.+1708   	; 0x13c2 <__unpack_f>
     d16:	8e 01       	movw	r16, r28
     d18:	0f 5e       	subi	r16, 0xEF	; 239
     d1a:	1f 4f       	sbci	r17, 0xFF	; 255
     d1c:	ce 01       	movw	r24, r28
     d1e:	05 96       	adiw	r24, 0x05	; 5
     d20:	b8 01       	movw	r22, r16
     d22:	4f d3       	rcall	.+1694   	; 0x13c2 <__unpack_f>
     d24:	c7 01       	movw	r24, r14
     d26:	b8 01       	movw	r22, r16
     d28:	ae 01       	movw	r20, r28
     d2a:	47 5e       	subi	r20, 0xE7	; 231
     d2c:	5f 4f       	sbci	r21, 0xFF	; 255
     d2e:	68 de       	rcall	.-816    	; 0xa00 <_fpadd_parts>
     d30:	73 d2       	rcall	.+1254   	; 0x1218 <__pack_f>
     d32:	a0 96       	adiw	r28, 0x20	; 32
     d34:	e6 e0       	ldi	r30, 0x06	; 6
     d36:	3e c4       	rjmp	.+2172   	; 0x15b4 <__epilogue_restores__+0x18>

00000d38 <__mulsf3>:
     d38:	a0 e2       	ldi	r26, 0x20	; 32
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	e1 ea       	ldi	r30, 0xA1	; 161
     d3e:	f6 e0       	ldi	r31, 0x06	; 6
     d40:	11 c4       	rjmp	.+2082   	; 0x1564 <__prologue_saves__>
     d42:	69 83       	std	Y+1, r22	; 0x01
     d44:	7a 83       	std	Y+2, r23	; 0x02
     d46:	8b 83       	std	Y+3, r24	; 0x03
     d48:	9c 83       	std	Y+4, r25	; 0x04
     d4a:	2d 83       	std	Y+5, r18	; 0x05
     d4c:	3e 83       	std	Y+6, r19	; 0x06
     d4e:	4f 83       	std	Y+7, r20	; 0x07
     d50:	58 87       	std	Y+8, r21	; 0x08
     d52:	ce 01       	movw	r24, r28
     d54:	01 96       	adiw	r24, 0x01	; 1
     d56:	be 01       	movw	r22, r28
     d58:	67 5f       	subi	r22, 0xF7	; 247
     d5a:	7f 4f       	sbci	r23, 0xFF	; 255
     d5c:	32 d3       	rcall	.+1636   	; 0x13c2 <__unpack_f>
     d5e:	ce 01       	movw	r24, r28
     d60:	05 96       	adiw	r24, 0x05	; 5
     d62:	be 01       	movw	r22, r28
     d64:	6f 5e       	subi	r22, 0xEF	; 239
     d66:	7f 4f       	sbci	r23, 0xFF	; 255
     d68:	2c d3       	rcall	.+1624   	; 0x13c2 <__unpack_f>
     d6a:	99 85       	ldd	r25, Y+9	; 0x09
     d6c:	92 30       	cpi	r25, 0x02	; 2
     d6e:	88 f0       	brcs	.+34     	; 0xd92 <__mulsf3+0x5a>
     d70:	89 89       	ldd	r24, Y+17	; 0x11
     d72:	82 30       	cpi	r24, 0x02	; 2
     d74:	c8 f0       	brcs	.+50     	; 0xda8 <__mulsf3+0x70>
     d76:	94 30       	cpi	r25, 0x04	; 4
     d78:	19 f4       	brne	.+6      	; 0xd80 <__mulsf3+0x48>
     d7a:	82 30       	cpi	r24, 0x02	; 2
     d7c:	51 f4       	brne	.+20     	; 0xd92 <__mulsf3+0x5a>
     d7e:	04 c0       	rjmp	.+8      	; 0xd88 <__mulsf3+0x50>
     d80:	84 30       	cpi	r24, 0x04	; 4
     d82:	29 f4       	brne	.+10     	; 0xd8e <__mulsf3+0x56>
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	81 f4       	brne	.+32     	; 0xda8 <__mulsf3+0x70>
     d88:	84 e6       	ldi	r24, 0x64	; 100
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	c6 c0       	rjmp	.+396    	; 0xf1a <__mulsf3+0x1e2>
     d8e:	92 30       	cpi	r25, 0x02	; 2
     d90:	49 f4       	brne	.+18     	; 0xda4 <__mulsf3+0x6c>
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	9a 85       	ldd	r25, Y+10	; 0x0a
     d96:	8a 89       	ldd	r24, Y+18	; 0x12
     d98:	98 13       	cpse	r25, r24
     d9a:	21 e0       	ldi	r18, 0x01	; 1
     d9c:	2a 87       	std	Y+10, r18	; 0x0a
     d9e:	ce 01       	movw	r24, r28
     da0:	09 96       	adiw	r24, 0x09	; 9
     da2:	bb c0       	rjmp	.+374    	; 0xf1a <__mulsf3+0x1e2>
     da4:	82 30       	cpi	r24, 0x02	; 2
     da6:	49 f4       	brne	.+18     	; 0xdba <__mulsf3+0x82>
     da8:	20 e0       	ldi	r18, 0x00	; 0
     daa:	9a 85       	ldd	r25, Y+10	; 0x0a
     dac:	8a 89       	ldd	r24, Y+18	; 0x12
     dae:	98 13       	cpse	r25, r24
     db0:	21 e0       	ldi	r18, 0x01	; 1
     db2:	2a 8b       	std	Y+18, r18	; 0x12
     db4:	ce 01       	movw	r24, r28
     db6:	41 96       	adiw	r24, 0x11	; 17
     db8:	b0 c0       	rjmp	.+352    	; 0xf1a <__mulsf3+0x1e2>
     dba:	2d 84       	ldd	r2, Y+13	; 0x0d
     dbc:	3e 84       	ldd	r3, Y+14	; 0x0e
     dbe:	4f 84       	ldd	r4, Y+15	; 0x0f
     dc0:	58 88       	ldd	r5, Y+16	; 0x10
     dc2:	6d 88       	ldd	r6, Y+21	; 0x15
     dc4:	7e 88       	ldd	r7, Y+22	; 0x16
     dc6:	8f 88       	ldd	r8, Y+23	; 0x17
     dc8:	98 8c       	ldd	r9, Y+24	; 0x18
     dca:	ee 24       	eor	r14, r14
     dcc:	ff 24       	eor	r15, r15
     dce:	87 01       	movw	r16, r14
     dd0:	aa 24       	eor	r10, r10
     dd2:	bb 24       	eor	r11, r11
     dd4:	65 01       	movw	r12, r10
     dd6:	40 e0       	ldi	r20, 0x00	; 0
     dd8:	50 e0       	ldi	r21, 0x00	; 0
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	e0 e0       	ldi	r30, 0x00	; 0
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	c1 01       	movw	r24, r2
     de4:	81 70       	andi	r24, 0x01	; 1
     de6:	90 70       	andi	r25, 0x00	; 0
     de8:	89 2b       	or	r24, r25
     dea:	e9 f0       	breq	.+58     	; 0xe26 <__mulsf3+0xee>
     dec:	e6 0c       	add	r14, r6
     dee:	f7 1c       	adc	r15, r7
     df0:	08 1d       	adc	r16, r8
     df2:	19 1d       	adc	r17, r9
     df4:	9a 01       	movw	r18, r20
     df6:	ab 01       	movw	r20, r22
     df8:	2a 0d       	add	r18, r10
     dfa:	3b 1d       	adc	r19, r11
     dfc:	4c 1d       	adc	r20, r12
     dfe:	5d 1d       	adc	r21, r13
     e00:	80 e0       	ldi	r24, 0x00	; 0
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	a0 e0       	ldi	r26, 0x00	; 0
     e06:	b0 e0       	ldi	r27, 0x00	; 0
     e08:	e6 14       	cp	r14, r6
     e0a:	f7 04       	cpc	r15, r7
     e0c:	08 05       	cpc	r16, r8
     e0e:	19 05       	cpc	r17, r9
     e10:	20 f4       	brcc	.+8      	; 0xe1a <__mulsf3+0xe2>
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	a0 e0       	ldi	r26, 0x00	; 0
     e18:	b0 e0       	ldi	r27, 0x00	; 0
     e1a:	ba 01       	movw	r22, r20
     e1c:	a9 01       	movw	r20, r18
     e1e:	48 0f       	add	r20, r24
     e20:	59 1f       	adc	r21, r25
     e22:	6a 1f       	adc	r22, r26
     e24:	7b 1f       	adc	r23, r27
     e26:	aa 0c       	add	r10, r10
     e28:	bb 1c       	adc	r11, r11
     e2a:	cc 1c       	adc	r12, r12
     e2c:	dd 1c       	adc	r13, r13
     e2e:	97 fe       	sbrs	r9, 7
     e30:	08 c0       	rjmp	.+16     	; 0xe42 <__mulsf3+0x10a>
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	a0 e0       	ldi	r26, 0x00	; 0
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	a8 2a       	or	r10, r24
     e3c:	b9 2a       	or	r11, r25
     e3e:	ca 2a       	or	r12, r26
     e40:	db 2a       	or	r13, r27
     e42:	31 96       	adiw	r30, 0x01	; 1
     e44:	e0 32       	cpi	r30, 0x20	; 32
     e46:	f1 05       	cpc	r31, r1
     e48:	49 f0       	breq	.+18     	; 0xe5c <__mulsf3+0x124>
     e4a:	66 0c       	add	r6, r6
     e4c:	77 1c       	adc	r7, r7
     e4e:	88 1c       	adc	r8, r8
     e50:	99 1c       	adc	r9, r9
     e52:	56 94       	lsr	r5
     e54:	47 94       	ror	r4
     e56:	37 94       	ror	r3
     e58:	27 94       	ror	r2
     e5a:	c3 cf       	rjmp	.-122    	; 0xde2 <__mulsf3+0xaa>
     e5c:	fa 85       	ldd	r31, Y+10	; 0x0a
     e5e:	ea 89       	ldd	r30, Y+18	; 0x12
     e60:	2b 89       	ldd	r18, Y+19	; 0x13
     e62:	3c 89       	ldd	r19, Y+20	; 0x14
     e64:	8b 85       	ldd	r24, Y+11	; 0x0b
     e66:	9c 85       	ldd	r25, Y+12	; 0x0c
     e68:	28 0f       	add	r18, r24
     e6a:	39 1f       	adc	r19, r25
     e6c:	2e 5f       	subi	r18, 0xFE	; 254
     e6e:	3f 4f       	sbci	r19, 0xFF	; 255
     e70:	17 c0       	rjmp	.+46     	; 0xea0 <__mulsf3+0x168>
     e72:	ca 01       	movw	r24, r20
     e74:	81 70       	andi	r24, 0x01	; 1
     e76:	90 70       	andi	r25, 0x00	; 0
     e78:	89 2b       	or	r24, r25
     e7a:	61 f0       	breq	.+24     	; 0xe94 <__mulsf3+0x15c>
     e7c:	16 95       	lsr	r17
     e7e:	07 95       	ror	r16
     e80:	f7 94       	ror	r15
     e82:	e7 94       	ror	r14
     e84:	80 e0       	ldi	r24, 0x00	; 0
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	a0 e0       	ldi	r26, 0x00	; 0
     e8a:	b0 e8       	ldi	r27, 0x80	; 128
     e8c:	e8 2a       	or	r14, r24
     e8e:	f9 2a       	or	r15, r25
     e90:	0a 2b       	or	r16, r26
     e92:	1b 2b       	or	r17, r27
     e94:	76 95       	lsr	r23
     e96:	67 95       	ror	r22
     e98:	57 95       	ror	r21
     e9a:	47 95       	ror	r20
     e9c:	2f 5f       	subi	r18, 0xFF	; 255
     e9e:	3f 4f       	sbci	r19, 0xFF	; 255
     ea0:	77 fd       	sbrc	r23, 7
     ea2:	e7 cf       	rjmp	.-50     	; 0xe72 <__mulsf3+0x13a>
     ea4:	0c c0       	rjmp	.+24     	; 0xebe <__mulsf3+0x186>
     ea6:	44 0f       	add	r20, r20
     ea8:	55 1f       	adc	r21, r21
     eaa:	66 1f       	adc	r22, r22
     eac:	77 1f       	adc	r23, r23
     eae:	17 fd       	sbrc	r17, 7
     eb0:	41 60       	ori	r20, 0x01	; 1
     eb2:	ee 0c       	add	r14, r14
     eb4:	ff 1c       	adc	r15, r15
     eb6:	00 1f       	adc	r16, r16
     eb8:	11 1f       	adc	r17, r17
     eba:	21 50       	subi	r18, 0x01	; 1
     ebc:	30 40       	sbci	r19, 0x00	; 0
     ebe:	40 30       	cpi	r20, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	59 07       	cpc	r21, r25
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	69 07       	cpc	r22, r25
     ec8:	90 e4       	ldi	r25, 0x40	; 64
     eca:	79 07       	cpc	r23, r25
     ecc:	60 f3       	brcs	.-40     	; 0xea6 <__mulsf3+0x16e>
     ece:	2b 8f       	std	Y+27, r18	; 0x1b
     ed0:	3c 8f       	std	Y+28, r19	; 0x1c
     ed2:	db 01       	movw	r26, r22
     ed4:	ca 01       	movw	r24, r20
     ed6:	8f 77       	andi	r24, 0x7F	; 127
     ed8:	90 70       	andi	r25, 0x00	; 0
     eda:	a0 70       	andi	r26, 0x00	; 0
     edc:	b0 70       	andi	r27, 0x00	; 0
     ede:	80 34       	cpi	r24, 0x40	; 64
     ee0:	91 05       	cpc	r25, r1
     ee2:	a1 05       	cpc	r26, r1
     ee4:	b1 05       	cpc	r27, r1
     ee6:	61 f4       	brne	.+24     	; 0xf00 <__mulsf3+0x1c8>
     ee8:	47 fd       	sbrc	r20, 7
     eea:	0a c0       	rjmp	.+20     	; 0xf00 <__mulsf3+0x1c8>
     eec:	e1 14       	cp	r14, r1
     eee:	f1 04       	cpc	r15, r1
     ef0:	01 05       	cpc	r16, r1
     ef2:	11 05       	cpc	r17, r1
     ef4:	29 f0       	breq	.+10     	; 0xf00 <__mulsf3+0x1c8>
     ef6:	40 5c       	subi	r20, 0xC0	; 192
     ef8:	5f 4f       	sbci	r21, 0xFF	; 255
     efa:	6f 4f       	sbci	r22, 0xFF	; 255
     efc:	7f 4f       	sbci	r23, 0xFF	; 255
     efe:	40 78       	andi	r20, 0x80	; 128
     f00:	1a 8e       	std	Y+26, r1	; 0x1a
     f02:	fe 17       	cp	r31, r30
     f04:	11 f0       	breq	.+4      	; 0xf0a <__mulsf3+0x1d2>
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	8a 8f       	std	Y+26, r24	; 0x1a
     f0a:	4d 8f       	std	Y+29, r20	; 0x1d
     f0c:	5e 8f       	std	Y+30, r21	; 0x1e
     f0e:	6f 8f       	std	Y+31, r22	; 0x1f
     f10:	78 a3       	std	Y+32, r23	; 0x20
     f12:	83 e0       	ldi	r24, 0x03	; 3
     f14:	89 8f       	std	Y+25, r24	; 0x19
     f16:	ce 01       	movw	r24, r28
     f18:	49 96       	adiw	r24, 0x19	; 25
     f1a:	7e d1       	rcall	.+764    	; 0x1218 <__pack_f>
     f1c:	a0 96       	adiw	r28, 0x20	; 32
     f1e:	e2 e1       	ldi	r30, 0x12	; 18
     f20:	3d c3       	rjmp	.+1658   	; 0x159c <__epilogue_restores__>

00000f22 <__gtsf2>:
     f22:	a8 e1       	ldi	r26, 0x18	; 24
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	e6 e9       	ldi	r30, 0x96	; 150
     f28:	f7 e0       	ldi	r31, 0x07	; 7
     f2a:	28 c3       	rjmp	.+1616   	; 0x157c <__prologue_saves__+0x18>
     f2c:	69 83       	std	Y+1, r22	; 0x01
     f2e:	7a 83       	std	Y+2, r23	; 0x02
     f30:	8b 83       	std	Y+3, r24	; 0x03
     f32:	9c 83       	std	Y+4, r25	; 0x04
     f34:	2d 83       	std	Y+5, r18	; 0x05
     f36:	3e 83       	std	Y+6, r19	; 0x06
     f38:	4f 83       	std	Y+7, r20	; 0x07
     f3a:	58 87       	std	Y+8, r21	; 0x08
     f3c:	89 e0       	ldi	r24, 0x09	; 9
     f3e:	e8 2e       	mov	r14, r24
     f40:	f1 2c       	mov	r15, r1
     f42:	ec 0e       	add	r14, r28
     f44:	fd 1e       	adc	r15, r29
     f46:	ce 01       	movw	r24, r28
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	b7 01       	movw	r22, r14
     f4c:	3a d2       	rcall	.+1140   	; 0x13c2 <__unpack_f>
     f4e:	8e 01       	movw	r16, r28
     f50:	0f 5e       	subi	r16, 0xEF	; 239
     f52:	1f 4f       	sbci	r17, 0xFF	; 255
     f54:	ce 01       	movw	r24, r28
     f56:	05 96       	adiw	r24, 0x05	; 5
     f58:	b8 01       	movw	r22, r16
     f5a:	33 d2       	rcall	.+1126   	; 0x13c2 <__unpack_f>
     f5c:	89 85       	ldd	r24, Y+9	; 0x09
     f5e:	82 30       	cpi	r24, 0x02	; 2
     f60:	38 f0       	brcs	.+14     	; 0xf70 <__gtsf2+0x4e>
     f62:	89 89       	ldd	r24, Y+17	; 0x11
     f64:	82 30       	cpi	r24, 0x02	; 2
     f66:	20 f0       	brcs	.+8      	; 0xf70 <__gtsf2+0x4e>
     f68:	c7 01       	movw	r24, r14
     f6a:	b8 01       	movw	r22, r16
     f6c:	a2 d2       	rcall	.+1348   	; 0x14b2 <__fpcmp_parts_f>
     f6e:	01 c0       	rjmp	.+2      	; 0xf72 <__gtsf2+0x50>
     f70:	8f ef       	ldi	r24, 0xFF	; 255
     f72:	68 96       	adiw	r28, 0x18	; 24
     f74:	e6 e0       	ldi	r30, 0x06	; 6
     f76:	1e c3       	rjmp	.+1596   	; 0x15b4 <__epilogue_restores__+0x18>

00000f78 <__gesf2>:
     f78:	a8 e1       	ldi	r26, 0x18	; 24
     f7a:	b0 e0       	ldi	r27, 0x00	; 0
     f7c:	e1 ec       	ldi	r30, 0xC1	; 193
     f7e:	f7 e0       	ldi	r31, 0x07	; 7
     f80:	fd c2       	rjmp	.+1530   	; 0x157c <__prologue_saves__+0x18>
     f82:	69 83       	std	Y+1, r22	; 0x01
     f84:	7a 83       	std	Y+2, r23	; 0x02
     f86:	8b 83       	std	Y+3, r24	; 0x03
     f88:	9c 83       	std	Y+4, r25	; 0x04
     f8a:	2d 83       	std	Y+5, r18	; 0x05
     f8c:	3e 83       	std	Y+6, r19	; 0x06
     f8e:	4f 83       	std	Y+7, r20	; 0x07
     f90:	58 87       	std	Y+8, r21	; 0x08
     f92:	89 e0       	ldi	r24, 0x09	; 9
     f94:	e8 2e       	mov	r14, r24
     f96:	f1 2c       	mov	r15, r1
     f98:	ec 0e       	add	r14, r28
     f9a:	fd 1e       	adc	r15, r29
     f9c:	ce 01       	movw	r24, r28
     f9e:	01 96       	adiw	r24, 0x01	; 1
     fa0:	b7 01       	movw	r22, r14
     fa2:	0f d2       	rcall	.+1054   	; 0x13c2 <__unpack_f>
     fa4:	8e 01       	movw	r16, r28
     fa6:	0f 5e       	subi	r16, 0xEF	; 239
     fa8:	1f 4f       	sbci	r17, 0xFF	; 255
     faa:	ce 01       	movw	r24, r28
     fac:	05 96       	adiw	r24, 0x05	; 5
     fae:	b8 01       	movw	r22, r16
     fb0:	08 d2       	rcall	.+1040   	; 0x13c2 <__unpack_f>
     fb2:	89 85       	ldd	r24, Y+9	; 0x09
     fb4:	82 30       	cpi	r24, 0x02	; 2
     fb6:	38 f0       	brcs	.+14     	; 0xfc6 <__gesf2+0x4e>
     fb8:	89 89       	ldd	r24, Y+17	; 0x11
     fba:	82 30       	cpi	r24, 0x02	; 2
     fbc:	20 f0       	brcs	.+8      	; 0xfc6 <__gesf2+0x4e>
     fbe:	c7 01       	movw	r24, r14
     fc0:	b8 01       	movw	r22, r16
     fc2:	77 d2       	rcall	.+1262   	; 0x14b2 <__fpcmp_parts_f>
     fc4:	01 c0       	rjmp	.+2      	; 0xfc8 <__gesf2+0x50>
     fc6:	8f ef       	ldi	r24, 0xFF	; 255
     fc8:	68 96       	adiw	r28, 0x18	; 24
     fca:	e6 e0       	ldi	r30, 0x06	; 6
     fcc:	f3 c2       	rjmp	.+1510   	; 0x15b4 <__epilogue_restores__+0x18>

00000fce <__ltsf2>:
     fce:	a8 e1       	ldi	r26, 0x18	; 24
     fd0:	b0 e0       	ldi	r27, 0x00	; 0
     fd2:	ec ee       	ldi	r30, 0xEC	; 236
     fd4:	f7 e0       	ldi	r31, 0x07	; 7
     fd6:	d2 c2       	rjmp	.+1444   	; 0x157c <__prologue_saves__+0x18>
     fd8:	69 83       	std	Y+1, r22	; 0x01
     fda:	7a 83       	std	Y+2, r23	; 0x02
     fdc:	8b 83       	std	Y+3, r24	; 0x03
     fde:	9c 83       	std	Y+4, r25	; 0x04
     fe0:	2d 83       	std	Y+5, r18	; 0x05
     fe2:	3e 83       	std	Y+6, r19	; 0x06
     fe4:	4f 83       	std	Y+7, r20	; 0x07
     fe6:	58 87       	std	Y+8, r21	; 0x08
     fe8:	89 e0       	ldi	r24, 0x09	; 9
     fea:	e8 2e       	mov	r14, r24
     fec:	f1 2c       	mov	r15, r1
     fee:	ec 0e       	add	r14, r28
     ff0:	fd 1e       	adc	r15, r29
     ff2:	ce 01       	movw	r24, r28
     ff4:	01 96       	adiw	r24, 0x01	; 1
     ff6:	b7 01       	movw	r22, r14
     ff8:	e4 d1       	rcall	.+968    	; 0x13c2 <__unpack_f>
     ffa:	8e 01       	movw	r16, r28
     ffc:	0f 5e       	subi	r16, 0xEF	; 239
     ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    1000:	ce 01       	movw	r24, r28
    1002:	05 96       	adiw	r24, 0x05	; 5
    1004:	b8 01       	movw	r22, r16
    1006:	dd d1       	rcall	.+954    	; 0x13c2 <__unpack_f>
    1008:	89 85       	ldd	r24, Y+9	; 0x09
    100a:	82 30       	cpi	r24, 0x02	; 2
    100c:	38 f0       	brcs	.+14     	; 0x101c <__ltsf2+0x4e>
    100e:	89 89       	ldd	r24, Y+17	; 0x11
    1010:	82 30       	cpi	r24, 0x02	; 2
    1012:	20 f0       	brcs	.+8      	; 0x101c <__ltsf2+0x4e>
    1014:	c7 01       	movw	r24, r14
    1016:	b8 01       	movw	r22, r16
    1018:	4c d2       	rcall	.+1176   	; 0x14b2 <__fpcmp_parts_f>
    101a:	01 c0       	rjmp	.+2      	; 0x101e <__ltsf2+0x50>
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	68 96       	adiw	r28, 0x18	; 24
    1020:	e6 e0       	ldi	r30, 0x06	; 6
    1022:	c8 c2       	rjmp	.+1424   	; 0x15b4 <__epilogue_restores__+0x18>

00001024 <__floatsisf>:
    1024:	a8 e0       	ldi	r26, 0x08	; 8
    1026:	b0 e0       	ldi	r27, 0x00	; 0
    1028:	e7 e1       	ldi	r30, 0x17	; 23
    102a:	f8 e0       	ldi	r31, 0x08	; 8
    102c:	a4 c2       	rjmp	.+1352   	; 0x1576 <__prologue_saves__+0x12>
    102e:	9b 01       	movw	r18, r22
    1030:	ac 01       	movw	r20, r24
    1032:	83 e0       	ldi	r24, 0x03	; 3
    1034:	89 83       	std	Y+1, r24	; 0x01
    1036:	da 01       	movw	r26, r20
    1038:	c9 01       	movw	r24, r18
    103a:	88 27       	eor	r24, r24
    103c:	b7 fd       	sbrc	r27, 7
    103e:	83 95       	inc	r24
    1040:	99 27       	eor	r25, r25
    1042:	aa 27       	eor	r26, r26
    1044:	bb 27       	eor	r27, r27
    1046:	b8 2e       	mov	r11, r24
    1048:	21 15       	cp	r18, r1
    104a:	31 05       	cpc	r19, r1
    104c:	41 05       	cpc	r20, r1
    104e:	51 05       	cpc	r21, r1
    1050:	19 f4       	brne	.+6      	; 0x1058 <__floatsisf+0x34>
    1052:	82 e0       	ldi	r24, 0x02	; 2
    1054:	89 83       	std	Y+1, r24	; 0x01
    1056:	39 c0       	rjmp	.+114    	; 0x10ca <__floatsisf+0xa6>
    1058:	88 23       	and	r24, r24
    105a:	a9 f0       	breq	.+42     	; 0x1086 <__floatsisf+0x62>
    105c:	20 30       	cpi	r18, 0x00	; 0
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	38 07       	cpc	r19, r24
    1062:	80 e0       	ldi	r24, 0x00	; 0
    1064:	48 07       	cpc	r20, r24
    1066:	80 e8       	ldi	r24, 0x80	; 128
    1068:	58 07       	cpc	r21, r24
    106a:	29 f4       	brne	.+10     	; 0x1076 <__floatsisf+0x52>
    106c:	60 e0       	ldi	r22, 0x00	; 0
    106e:	70 e0       	ldi	r23, 0x00	; 0
    1070:	80 e0       	ldi	r24, 0x00	; 0
    1072:	9f ec       	ldi	r25, 0xCF	; 207
    1074:	2e c0       	rjmp	.+92     	; 0x10d2 <__floatsisf+0xae>
    1076:	ee 24       	eor	r14, r14
    1078:	ff 24       	eor	r15, r15
    107a:	87 01       	movw	r16, r14
    107c:	e2 1a       	sub	r14, r18
    107e:	f3 0a       	sbc	r15, r19
    1080:	04 0b       	sbc	r16, r20
    1082:	15 0b       	sbc	r17, r21
    1084:	02 c0       	rjmp	.+4      	; 0x108a <__floatsisf+0x66>
    1086:	79 01       	movw	r14, r18
    1088:	8a 01       	movw	r16, r20
    108a:	8e e1       	ldi	r24, 0x1E	; 30
    108c:	c8 2e       	mov	r12, r24
    108e:	d1 2c       	mov	r13, r1
    1090:	dc 82       	std	Y+4, r13	; 0x04
    1092:	cb 82       	std	Y+3, r12	; 0x03
    1094:	ed 82       	std	Y+5, r14	; 0x05
    1096:	fe 82       	std	Y+6, r15	; 0x06
    1098:	0f 83       	std	Y+7, r16	; 0x07
    109a:	18 87       	std	Y+8, r17	; 0x08
    109c:	c8 01       	movw	r24, r16
    109e:	b7 01       	movw	r22, r14
    10a0:	6c d0       	rcall	.+216    	; 0x117a <__clzsi2>
    10a2:	01 97       	sbiw	r24, 0x01	; 1
    10a4:	18 16       	cp	r1, r24
    10a6:	19 06       	cpc	r1, r25
    10a8:	84 f4       	brge	.+32     	; 0x10ca <__floatsisf+0xa6>
    10aa:	08 2e       	mov	r0, r24
    10ac:	04 c0       	rjmp	.+8      	; 0x10b6 <__floatsisf+0x92>
    10ae:	ee 0c       	add	r14, r14
    10b0:	ff 1c       	adc	r15, r15
    10b2:	00 1f       	adc	r16, r16
    10b4:	11 1f       	adc	r17, r17
    10b6:	0a 94       	dec	r0
    10b8:	d2 f7       	brpl	.-12     	; 0x10ae <__floatsisf+0x8a>
    10ba:	ed 82       	std	Y+5, r14	; 0x05
    10bc:	fe 82       	std	Y+6, r15	; 0x06
    10be:	0f 83       	std	Y+7, r16	; 0x07
    10c0:	18 87       	std	Y+8, r17	; 0x08
    10c2:	c8 1a       	sub	r12, r24
    10c4:	d9 0a       	sbc	r13, r25
    10c6:	dc 82       	std	Y+4, r13	; 0x04
    10c8:	cb 82       	std	Y+3, r12	; 0x03
    10ca:	ba 82       	std	Y+2, r11	; 0x02
    10cc:	ce 01       	movw	r24, r28
    10ce:	01 96       	adiw	r24, 0x01	; 1
    10d0:	a3 d0       	rcall	.+326    	; 0x1218 <__pack_f>
    10d2:	28 96       	adiw	r28, 0x08	; 8
    10d4:	e9 e0       	ldi	r30, 0x09	; 9
    10d6:	6b c2       	rjmp	.+1238   	; 0x15ae <__epilogue_restores__+0x12>

000010d8 <__fixsfsi>:
    10d8:	ac e0       	ldi	r26, 0x0C	; 12
    10da:	b0 e0       	ldi	r27, 0x00	; 0
    10dc:	e1 e7       	ldi	r30, 0x71	; 113
    10de:	f8 e0       	ldi	r31, 0x08	; 8
    10e0:	51 c2       	rjmp	.+1186   	; 0x1584 <__prologue_saves__+0x20>
    10e2:	69 83       	std	Y+1, r22	; 0x01
    10e4:	7a 83       	std	Y+2, r23	; 0x02
    10e6:	8b 83       	std	Y+3, r24	; 0x03
    10e8:	9c 83       	std	Y+4, r25	; 0x04
    10ea:	ce 01       	movw	r24, r28
    10ec:	01 96       	adiw	r24, 0x01	; 1
    10ee:	be 01       	movw	r22, r28
    10f0:	6b 5f       	subi	r22, 0xFB	; 251
    10f2:	7f 4f       	sbci	r23, 0xFF	; 255
    10f4:	66 d1       	rcall	.+716    	; 0x13c2 <__unpack_f>
    10f6:	8d 81       	ldd	r24, Y+5	; 0x05
    10f8:	82 30       	cpi	r24, 0x02	; 2
    10fa:	61 f1       	breq	.+88     	; 0x1154 <__fixsfsi+0x7c>
    10fc:	82 30       	cpi	r24, 0x02	; 2
    10fe:	50 f1       	brcs	.+84     	; 0x1154 <__fixsfsi+0x7c>
    1100:	84 30       	cpi	r24, 0x04	; 4
    1102:	21 f4       	brne	.+8      	; 0x110c <__fixsfsi+0x34>
    1104:	8e 81       	ldd	r24, Y+6	; 0x06
    1106:	88 23       	and	r24, r24
    1108:	51 f1       	breq	.+84     	; 0x115e <__fixsfsi+0x86>
    110a:	2e c0       	rjmp	.+92     	; 0x1168 <__fixsfsi+0x90>
    110c:	2f 81       	ldd	r18, Y+7	; 0x07
    110e:	38 85       	ldd	r19, Y+8	; 0x08
    1110:	37 fd       	sbrc	r19, 7
    1112:	20 c0       	rjmp	.+64     	; 0x1154 <__fixsfsi+0x7c>
    1114:	6e 81       	ldd	r22, Y+6	; 0x06
    1116:	2f 31       	cpi	r18, 0x1F	; 31
    1118:	31 05       	cpc	r19, r1
    111a:	1c f0       	brlt	.+6      	; 0x1122 <__fixsfsi+0x4a>
    111c:	66 23       	and	r22, r22
    111e:	f9 f0       	breq	.+62     	; 0x115e <__fixsfsi+0x86>
    1120:	23 c0       	rjmp	.+70     	; 0x1168 <__fixsfsi+0x90>
    1122:	8e e1       	ldi	r24, 0x1E	; 30
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	82 1b       	sub	r24, r18
    1128:	93 0b       	sbc	r25, r19
    112a:	29 85       	ldd	r18, Y+9	; 0x09
    112c:	3a 85       	ldd	r19, Y+10	; 0x0a
    112e:	4b 85       	ldd	r20, Y+11	; 0x0b
    1130:	5c 85       	ldd	r21, Y+12	; 0x0c
    1132:	04 c0       	rjmp	.+8      	; 0x113c <__fixsfsi+0x64>
    1134:	56 95       	lsr	r21
    1136:	47 95       	ror	r20
    1138:	37 95       	ror	r19
    113a:	27 95       	ror	r18
    113c:	8a 95       	dec	r24
    113e:	d2 f7       	brpl	.-12     	; 0x1134 <__fixsfsi+0x5c>
    1140:	66 23       	and	r22, r22
    1142:	b1 f0       	breq	.+44     	; 0x1170 <__fixsfsi+0x98>
    1144:	50 95       	com	r21
    1146:	40 95       	com	r20
    1148:	30 95       	com	r19
    114a:	21 95       	neg	r18
    114c:	3f 4f       	sbci	r19, 0xFF	; 255
    114e:	4f 4f       	sbci	r20, 0xFF	; 255
    1150:	5f 4f       	sbci	r21, 0xFF	; 255
    1152:	0e c0       	rjmp	.+28     	; 0x1170 <__fixsfsi+0x98>
    1154:	20 e0       	ldi	r18, 0x00	; 0
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	40 e0       	ldi	r20, 0x00	; 0
    115a:	50 e0       	ldi	r21, 0x00	; 0
    115c:	09 c0       	rjmp	.+18     	; 0x1170 <__fixsfsi+0x98>
    115e:	2f ef       	ldi	r18, 0xFF	; 255
    1160:	3f ef       	ldi	r19, 0xFF	; 255
    1162:	4f ef       	ldi	r20, 0xFF	; 255
    1164:	5f e7       	ldi	r21, 0x7F	; 127
    1166:	04 c0       	rjmp	.+8      	; 0x1170 <__fixsfsi+0x98>
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	40 e0       	ldi	r20, 0x00	; 0
    116e:	50 e8       	ldi	r21, 0x80	; 128
    1170:	b9 01       	movw	r22, r18
    1172:	ca 01       	movw	r24, r20
    1174:	2c 96       	adiw	r28, 0x0c	; 12
    1176:	e2 e0       	ldi	r30, 0x02	; 2
    1178:	21 c2       	rjmp	.+1090   	; 0x15bc <__epilogue_restores__+0x20>

0000117a <__clzsi2>:
    117a:	ef 92       	push	r14
    117c:	ff 92       	push	r15
    117e:	0f 93       	push	r16
    1180:	1f 93       	push	r17
    1182:	7b 01       	movw	r14, r22
    1184:	8c 01       	movw	r16, r24
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	e8 16       	cp	r14, r24
    118a:	80 e0       	ldi	r24, 0x00	; 0
    118c:	f8 06       	cpc	r15, r24
    118e:	81 e0       	ldi	r24, 0x01	; 1
    1190:	08 07       	cpc	r16, r24
    1192:	80 e0       	ldi	r24, 0x00	; 0
    1194:	18 07       	cpc	r17, r24
    1196:	88 f4       	brcc	.+34     	; 0x11ba <__clzsi2+0x40>
    1198:	8f ef       	ldi	r24, 0xFF	; 255
    119a:	e8 16       	cp	r14, r24
    119c:	f1 04       	cpc	r15, r1
    119e:	01 05       	cpc	r16, r1
    11a0:	11 05       	cpc	r17, r1
    11a2:	31 f0       	breq	.+12     	; 0x11b0 <__clzsi2+0x36>
    11a4:	28 f0       	brcs	.+10     	; 0x11b0 <__clzsi2+0x36>
    11a6:	88 e0       	ldi	r24, 0x08	; 8
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	a0 e0       	ldi	r26, 0x00	; 0
    11ac:	b0 e0       	ldi	r27, 0x00	; 0
    11ae:	17 c0       	rjmp	.+46     	; 0x11de <__clzsi2+0x64>
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	a0 e0       	ldi	r26, 0x00	; 0
    11b6:	b0 e0       	ldi	r27, 0x00	; 0
    11b8:	12 c0       	rjmp	.+36     	; 0x11de <__clzsi2+0x64>
    11ba:	80 e0       	ldi	r24, 0x00	; 0
    11bc:	e8 16       	cp	r14, r24
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	f8 06       	cpc	r15, r24
    11c2:	80 e0       	ldi	r24, 0x00	; 0
    11c4:	08 07       	cpc	r16, r24
    11c6:	81 e0       	ldi	r24, 0x01	; 1
    11c8:	18 07       	cpc	r17, r24
    11ca:	28 f0       	brcs	.+10     	; 0x11d6 <__clzsi2+0x5c>
    11cc:	88 e1       	ldi	r24, 0x18	; 24
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	a0 e0       	ldi	r26, 0x00	; 0
    11d2:	b0 e0       	ldi	r27, 0x00	; 0
    11d4:	04 c0       	rjmp	.+8      	; 0x11de <__clzsi2+0x64>
    11d6:	80 e1       	ldi	r24, 0x10	; 16
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	a0 e0       	ldi	r26, 0x00	; 0
    11dc:	b0 e0       	ldi	r27, 0x00	; 0
    11de:	20 e2       	ldi	r18, 0x20	; 32
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	40 e0       	ldi	r20, 0x00	; 0
    11e4:	50 e0       	ldi	r21, 0x00	; 0
    11e6:	28 1b       	sub	r18, r24
    11e8:	39 0b       	sbc	r19, r25
    11ea:	4a 0b       	sbc	r20, r26
    11ec:	5b 0b       	sbc	r21, r27
    11ee:	04 c0       	rjmp	.+8      	; 0x11f8 <__clzsi2+0x7e>
    11f0:	16 95       	lsr	r17
    11f2:	07 95       	ror	r16
    11f4:	f7 94       	ror	r15
    11f6:	e7 94       	ror	r14
    11f8:	8a 95       	dec	r24
    11fa:	d2 f7       	brpl	.-12     	; 0x11f0 <__clzsi2+0x76>
    11fc:	f7 01       	movw	r30, r14
    11fe:	e4 59       	subi	r30, 0x94	; 148
    1200:	ff 4f       	sbci	r31, 0xFF	; 255
    1202:	80 81       	ld	r24, Z
    1204:	28 1b       	sub	r18, r24
    1206:	31 09       	sbc	r19, r1
    1208:	41 09       	sbc	r20, r1
    120a:	51 09       	sbc	r21, r1
    120c:	c9 01       	movw	r24, r18
    120e:	1f 91       	pop	r17
    1210:	0f 91       	pop	r16
    1212:	ff 90       	pop	r15
    1214:	ef 90       	pop	r14
    1216:	08 95       	ret

00001218 <__pack_f>:
    1218:	df 92       	push	r13
    121a:	ef 92       	push	r14
    121c:	ff 92       	push	r15
    121e:	0f 93       	push	r16
    1220:	1f 93       	push	r17
    1222:	fc 01       	movw	r30, r24
    1224:	e4 80       	ldd	r14, Z+4	; 0x04
    1226:	f5 80       	ldd	r15, Z+5	; 0x05
    1228:	06 81       	ldd	r16, Z+6	; 0x06
    122a:	17 81       	ldd	r17, Z+7	; 0x07
    122c:	d1 80       	ldd	r13, Z+1	; 0x01
    122e:	80 81       	ld	r24, Z
    1230:	82 30       	cpi	r24, 0x02	; 2
    1232:	48 f4       	brcc	.+18     	; 0x1246 <__pack_f+0x2e>
    1234:	80 e0       	ldi	r24, 0x00	; 0
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	a0 e1       	ldi	r26, 0x10	; 16
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e8 2a       	or	r14, r24
    123e:	f9 2a       	or	r15, r25
    1240:	0a 2b       	or	r16, r26
    1242:	1b 2b       	or	r17, r27
    1244:	a5 c0       	rjmp	.+330    	; 0x1390 <__pack_f+0x178>
    1246:	84 30       	cpi	r24, 0x04	; 4
    1248:	09 f4       	brne	.+2      	; 0x124c <__pack_f+0x34>
    124a:	9f c0       	rjmp	.+318    	; 0x138a <__pack_f+0x172>
    124c:	82 30       	cpi	r24, 0x02	; 2
    124e:	21 f4       	brne	.+8      	; 0x1258 <__pack_f+0x40>
    1250:	ee 24       	eor	r14, r14
    1252:	ff 24       	eor	r15, r15
    1254:	87 01       	movw	r16, r14
    1256:	05 c0       	rjmp	.+10     	; 0x1262 <__pack_f+0x4a>
    1258:	e1 14       	cp	r14, r1
    125a:	f1 04       	cpc	r15, r1
    125c:	01 05       	cpc	r16, r1
    125e:	11 05       	cpc	r17, r1
    1260:	19 f4       	brne	.+6      	; 0x1268 <__pack_f+0x50>
    1262:	e0 e0       	ldi	r30, 0x00	; 0
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	96 c0       	rjmp	.+300    	; 0x1394 <__pack_f+0x17c>
    1268:	62 81       	ldd	r22, Z+2	; 0x02
    126a:	73 81       	ldd	r23, Z+3	; 0x03
    126c:	9f ef       	ldi	r25, 0xFF	; 255
    126e:	62 38       	cpi	r22, 0x82	; 130
    1270:	79 07       	cpc	r23, r25
    1272:	0c f0       	brlt	.+2      	; 0x1276 <__pack_f+0x5e>
    1274:	5b c0       	rjmp	.+182    	; 0x132c <__pack_f+0x114>
    1276:	22 e8       	ldi	r18, 0x82	; 130
    1278:	3f ef       	ldi	r19, 0xFF	; 255
    127a:	26 1b       	sub	r18, r22
    127c:	37 0b       	sbc	r19, r23
    127e:	2a 31       	cpi	r18, 0x1A	; 26
    1280:	31 05       	cpc	r19, r1
    1282:	2c f0       	brlt	.+10     	; 0x128e <__pack_f+0x76>
    1284:	20 e0       	ldi	r18, 0x00	; 0
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	40 e0       	ldi	r20, 0x00	; 0
    128a:	50 e0       	ldi	r21, 0x00	; 0
    128c:	2a c0       	rjmp	.+84     	; 0x12e2 <__pack_f+0xca>
    128e:	b8 01       	movw	r22, r16
    1290:	a7 01       	movw	r20, r14
    1292:	02 2e       	mov	r0, r18
    1294:	04 c0       	rjmp	.+8      	; 0x129e <__pack_f+0x86>
    1296:	76 95       	lsr	r23
    1298:	67 95       	ror	r22
    129a:	57 95       	ror	r21
    129c:	47 95       	ror	r20
    129e:	0a 94       	dec	r0
    12a0:	d2 f7       	brpl	.-12     	; 0x1296 <__pack_f+0x7e>
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	a0 e0       	ldi	r26, 0x00	; 0
    12a8:	b0 e0       	ldi	r27, 0x00	; 0
    12aa:	04 c0       	rjmp	.+8      	; 0x12b4 <__pack_f+0x9c>
    12ac:	88 0f       	add	r24, r24
    12ae:	99 1f       	adc	r25, r25
    12b0:	aa 1f       	adc	r26, r26
    12b2:	bb 1f       	adc	r27, r27
    12b4:	2a 95       	dec	r18
    12b6:	d2 f7       	brpl	.-12     	; 0x12ac <__pack_f+0x94>
    12b8:	01 97       	sbiw	r24, 0x01	; 1
    12ba:	a1 09       	sbc	r26, r1
    12bc:	b1 09       	sbc	r27, r1
    12be:	8e 21       	and	r24, r14
    12c0:	9f 21       	and	r25, r15
    12c2:	a0 23       	and	r26, r16
    12c4:	b1 23       	and	r27, r17
    12c6:	00 97       	sbiw	r24, 0x00	; 0
    12c8:	a1 05       	cpc	r26, r1
    12ca:	b1 05       	cpc	r27, r1
    12cc:	21 f0       	breq	.+8      	; 0x12d6 <__pack_f+0xbe>
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	a0 e0       	ldi	r26, 0x00	; 0
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	9a 01       	movw	r18, r20
    12d8:	ab 01       	movw	r20, r22
    12da:	28 2b       	or	r18, r24
    12dc:	39 2b       	or	r19, r25
    12de:	4a 2b       	or	r20, r26
    12e0:	5b 2b       	or	r21, r27
    12e2:	da 01       	movw	r26, r20
    12e4:	c9 01       	movw	r24, r18
    12e6:	8f 77       	andi	r24, 0x7F	; 127
    12e8:	90 70       	andi	r25, 0x00	; 0
    12ea:	a0 70       	andi	r26, 0x00	; 0
    12ec:	b0 70       	andi	r27, 0x00	; 0
    12ee:	80 34       	cpi	r24, 0x40	; 64
    12f0:	91 05       	cpc	r25, r1
    12f2:	a1 05       	cpc	r26, r1
    12f4:	b1 05       	cpc	r27, r1
    12f6:	39 f4       	brne	.+14     	; 0x1306 <__pack_f+0xee>
    12f8:	27 ff       	sbrs	r18, 7
    12fa:	09 c0       	rjmp	.+18     	; 0x130e <__pack_f+0xf6>
    12fc:	20 5c       	subi	r18, 0xC0	; 192
    12fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1300:	4f 4f       	sbci	r20, 0xFF	; 255
    1302:	5f 4f       	sbci	r21, 0xFF	; 255
    1304:	04 c0       	rjmp	.+8      	; 0x130e <__pack_f+0xf6>
    1306:	21 5c       	subi	r18, 0xC1	; 193
    1308:	3f 4f       	sbci	r19, 0xFF	; 255
    130a:	4f 4f       	sbci	r20, 0xFF	; 255
    130c:	5f 4f       	sbci	r21, 0xFF	; 255
    130e:	e0 e0       	ldi	r30, 0x00	; 0
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	20 30       	cpi	r18, 0x00	; 0
    1314:	a0 e0       	ldi	r26, 0x00	; 0
    1316:	3a 07       	cpc	r19, r26
    1318:	a0 e0       	ldi	r26, 0x00	; 0
    131a:	4a 07       	cpc	r20, r26
    131c:	a0 e4       	ldi	r26, 0x40	; 64
    131e:	5a 07       	cpc	r21, r26
    1320:	10 f0       	brcs	.+4      	; 0x1326 <__pack_f+0x10e>
    1322:	e1 e0       	ldi	r30, 0x01	; 1
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	79 01       	movw	r14, r18
    1328:	8a 01       	movw	r16, r20
    132a:	27 c0       	rjmp	.+78     	; 0x137a <__pack_f+0x162>
    132c:	60 38       	cpi	r22, 0x80	; 128
    132e:	71 05       	cpc	r23, r1
    1330:	64 f5       	brge	.+88     	; 0x138a <__pack_f+0x172>
    1332:	fb 01       	movw	r30, r22
    1334:	e1 58       	subi	r30, 0x81	; 129
    1336:	ff 4f       	sbci	r31, 0xFF	; 255
    1338:	d8 01       	movw	r26, r16
    133a:	c7 01       	movw	r24, r14
    133c:	8f 77       	andi	r24, 0x7F	; 127
    133e:	90 70       	andi	r25, 0x00	; 0
    1340:	a0 70       	andi	r26, 0x00	; 0
    1342:	b0 70       	andi	r27, 0x00	; 0
    1344:	80 34       	cpi	r24, 0x40	; 64
    1346:	91 05       	cpc	r25, r1
    1348:	a1 05       	cpc	r26, r1
    134a:	b1 05       	cpc	r27, r1
    134c:	39 f4       	brne	.+14     	; 0x135c <__pack_f+0x144>
    134e:	e7 fe       	sbrs	r14, 7
    1350:	0d c0       	rjmp	.+26     	; 0x136c <__pack_f+0x154>
    1352:	80 e4       	ldi	r24, 0x40	; 64
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	a0 e0       	ldi	r26, 0x00	; 0
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	04 c0       	rjmp	.+8      	; 0x1364 <__pack_f+0x14c>
    135c:	8f e3       	ldi	r24, 0x3F	; 63
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	a0 e0       	ldi	r26, 0x00	; 0
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	e8 0e       	add	r14, r24
    1366:	f9 1e       	adc	r15, r25
    1368:	0a 1f       	adc	r16, r26
    136a:	1b 1f       	adc	r17, r27
    136c:	17 ff       	sbrs	r17, 7
    136e:	05 c0       	rjmp	.+10     	; 0x137a <__pack_f+0x162>
    1370:	16 95       	lsr	r17
    1372:	07 95       	ror	r16
    1374:	f7 94       	ror	r15
    1376:	e7 94       	ror	r14
    1378:	31 96       	adiw	r30, 0x01	; 1
    137a:	87 e0       	ldi	r24, 0x07	; 7
    137c:	16 95       	lsr	r17
    137e:	07 95       	ror	r16
    1380:	f7 94       	ror	r15
    1382:	e7 94       	ror	r14
    1384:	8a 95       	dec	r24
    1386:	d1 f7       	brne	.-12     	; 0x137c <__pack_f+0x164>
    1388:	05 c0       	rjmp	.+10     	; 0x1394 <__pack_f+0x17c>
    138a:	ee 24       	eor	r14, r14
    138c:	ff 24       	eor	r15, r15
    138e:	87 01       	movw	r16, r14
    1390:	ef ef       	ldi	r30, 0xFF	; 255
    1392:	f0 e0       	ldi	r31, 0x00	; 0
    1394:	6e 2f       	mov	r22, r30
    1396:	67 95       	ror	r22
    1398:	66 27       	eor	r22, r22
    139a:	67 95       	ror	r22
    139c:	90 2f       	mov	r25, r16
    139e:	9f 77       	andi	r25, 0x7F	; 127
    13a0:	d7 94       	ror	r13
    13a2:	dd 24       	eor	r13, r13
    13a4:	d7 94       	ror	r13
    13a6:	8e 2f       	mov	r24, r30
    13a8:	86 95       	lsr	r24
    13aa:	49 2f       	mov	r20, r25
    13ac:	46 2b       	or	r20, r22
    13ae:	58 2f       	mov	r21, r24
    13b0:	5d 29       	or	r21, r13
    13b2:	b7 01       	movw	r22, r14
    13b4:	ca 01       	movw	r24, r20
    13b6:	1f 91       	pop	r17
    13b8:	0f 91       	pop	r16
    13ba:	ff 90       	pop	r15
    13bc:	ef 90       	pop	r14
    13be:	df 90       	pop	r13
    13c0:	08 95       	ret

000013c2 <__unpack_f>:
    13c2:	fc 01       	movw	r30, r24
    13c4:	db 01       	movw	r26, r22
    13c6:	40 81       	ld	r20, Z
    13c8:	51 81       	ldd	r21, Z+1	; 0x01
    13ca:	22 81       	ldd	r18, Z+2	; 0x02
    13cc:	62 2f       	mov	r22, r18
    13ce:	6f 77       	andi	r22, 0x7F	; 127
    13d0:	70 e0       	ldi	r23, 0x00	; 0
    13d2:	22 1f       	adc	r18, r18
    13d4:	22 27       	eor	r18, r18
    13d6:	22 1f       	adc	r18, r18
    13d8:	93 81       	ldd	r25, Z+3	; 0x03
    13da:	89 2f       	mov	r24, r25
    13dc:	88 0f       	add	r24, r24
    13de:	82 2b       	or	r24, r18
    13e0:	28 2f       	mov	r18, r24
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	99 1f       	adc	r25, r25
    13e6:	99 27       	eor	r25, r25
    13e8:	99 1f       	adc	r25, r25
    13ea:	11 96       	adiw	r26, 0x01	; 1
    13ec:	9c 93       	st	X, r25
    13ee:	11 97       	sbiw	r26, 0x01	; 1
    13f0:	21 15       	cp	r18, r1
    13f2:	31 05       	cpc	r19, r1
    13f4:	a9 f5       	brne	.+106    	; 0x1460 <__unpack_f+0x9e>
    13f6:	41 15       	cp	r20, r1
    13f8:	51 05       	cpc	r21, r1
    13fa:	61 05       	cpc	r22, r1
    13fc:	71 05       	cpc	r23, r1
    13fe:	11 f4       	brne	.+4      	; 0x1404 <__unpack_f+0x42>
    1400:	82 e0       	ldi	r24, 0x02	; 2
    1402:	37 c0       	rjmp	.+110    	; 0x1472 <__unpack_f+0xb0>
    1404:	82 e8       	ldi	r24, 0x82	; 130
    1406:	9f ef       	ldi	r25, 0xFF	; 255
    1408:	13 96       	adiw	r26, 0x03	; 3
    140a:	9c 93       	st	X, r25
    140c:	8e 93       	st	-X, r24
    140e:	12 97       	sbiw	r26, 0x02	; 2
    1410:	9a 01       	movw	r18, r20
    1412:	ab 01       	movw	r20, r22
    1414:	67 e0       	ldi	r22, 0x07	; 7
    1416:	22 0f       	add	r18, r18
    1418:	33 1f       	adc	r19, r19
    141a:	44 1f       	adc	r20, r20
    141c:	55 1f       	adc	r21, r21
    141e:	6a 95       	dec	r22
    1420:	d1 f7       	brne	.-12     	; 0x1416 <__unpack_f+0x54>
    1422:	83 e0       	ldi	r24, 0x03	; 3
    1424:	8c 93       	st	X, r24
    1426:	0d c0       	rjmp	.+26     	; 0x1442 <__unpack_f+0x80>
    1428:	22 0f       	add	r18, r18
    142a:	33 1f       	adc	r19, r19
    142c:	44 1f       	adc	r20, r20
    142e:	55 1f       	adc	r21, r21
    1430:	12 96       	adiw	r26, 0x02	; 2
    1432:	8d 91       	ld	r24, X+
    1434:	9c 91       	ld	r25, X
    1436:	13 97       	sbiw	r26, 0x03	; 3
    1438:	01 97       	sbiw	r24, 0x01	; 1
    143a:	13 96       	adiw	r26, 0x03	; 3
    143c:	9c 93       	st	X, r25
    143e:	8e 93       	st	-X, r24
    1440:	12 97       	sbiw	r26, 0x02	; 2
    1442:	20 30       	cpi	r18, 0x00	; 0
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	38 07       	cpc	r19, r24
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	48 07       	cpc	r20, r24
    144c:	80 e4       	ldi	r24, 0x40	; 64
    144e:	58 07       	cpc	r21, r24
    1450:	58 f3       	brcs	.-42     	; 0x1428 <__unpack_f+0x66>
    1452:	14 96       	adiw	r26, 0x04	; 4
    1454:	2d 93       	st	X+, r18
    1456:	3d 93       	st	X+, r19
    1458:	4d 93       	st	X+, r20
    145a:	5c 93       	st	X, r21
    145c:	17 97       	sbiw	r26, 0x07	; 7
    145e:	08 95       	ret
    1460:	2f 3f       	cpi	r18, 0xFF	; 255
    1462:	31 05       	cpc	r19, r1
    1464:	79 f4       	brne	.+30     	; 0x1484 <__unpack_f+0xc2>
    1466:	41 15       	cp	r20, r1
    1468:	51 05       	cpc	r21, r1
    146a:	61 05       	cpc	r22, r1
    146c:	71 05       	cpc	r23, r1
    146e:	19 f4       	brne	.+6      	; 0x1476 <__unpack_f+0xb4>
    1470:	84 e0       	ldi	r24, 0x04	; 4
    1472:	8c 93       	st	X, r24
    1474:	08 95       	ret
    1476:	64 ff       	sbrs	r22, 4
    1478:	03 c0       	rjmp	.+6      	; 0x1480 <__unpack_f+0xbe>
    147a:	81 e0       	ldi	r24, 0x01	; 1
    147c:	8c 93       	st	X, r24
    147e:	12 c0       	rjmp	.+36     	; 0x14a4 <__unpack_f+0xe2>
    1480:	1c 92       	st	X, r1
    1482:	10 c0       	rjmp	.+32     	; 0x14a4 <__unpack_f+0xe2>
    1484:	2f 57       	subi	r18, 0x7F	; 127
    1486:	30 40       	sbci	r19, 0x00	; 0
    1488:	13 96       	adiw	r26, 0x03	; 3
    148a:	3c 93       	st	X, r19
    148c:	2e 93       	st	-X, r18
    148e:	12 97       	sbiw	r26, 0x02	; 2
    1490:	83 e0       	ldi	r24, 0x03	; 3
    1492:	8c 93       	st	X, r24
    1494:	87 e0       	ldi	r24, 0x07	; 7
    1496:	44 0f       	add	r20, r20
    1498:	55 1f       	adc	r21, r21
    149a:	66 1f       	adc	r22, r22
    149c:	77 1f       	adc	r23, r23
    149e:	8a 95       	dec	r24
    14a0:	d1 f7       	brne	.-12     	; 0x1496 <__unpack_f+0xd4>
    14a2:	70 64       	ori	r23, 0x40	; 64
    14a4:	14 96       	adiw	r26, 0x04	; 4
    14a6:	4d 93       	st	X+, r20
    14a8:	5d 93       	st	X+, r21
    14aa:	6d 93       	st	X+, r22
    14ac:	7c 93       	st	X, r23
    14ae:	17 97       	sbiw	r26, 0x07	; 7
    14b0:	08 95       	ret

000014b2 <__fpcmp_parts_f>:
    14b2:	1f 93       	push	r17
    14b4:	dc 01       	movw	r26, r24
    14b6:	fb 01       	movw	r30, r22
    14b8:	9c 91       	ld	r25, X
    14ba:	92 30       	cpi	r25, 0x02	; 2
    14bc:	08 f4       	brcc	.+2      	; 0x14c0 <__fpcmp_parts_f+0xe>
    14be:	47 c0       	rjmp	.+142    	; 0x154e <__fpcmp_parts_f+0x9c>
    14c0:	80 81       	ld	r24, Z
    14c2:	82 30       	cpi	r24, 0x02	; 2
    14c4:	08 f4       	brcc	.+2      	; 0x14c8 <__fpcmp_parts_f+0x16>
    14c6:	43 c0       	rjmp	.+134    	; 0x154e <__fpcmp_parts_f+0x9c>
    14c8:	94 30       	cpi	r25, 0x04	; 4
    14ca:	51 f4       	brne	.+20     	; 0x14e0 <__fpcmp_parts_f+0x2e>
    14cc:	11 96       	adiw	r26, 0x01	; 1
    14ce:	1c 91       	ld	r17, X
    14d0:	84 30       	cpi	r24, 0x04	; 4
    14d2:	99 f5       	brne	.+102    	; 0x153a <__fpcmp_parts_f+0x88>
    14d4:	81 81       	ldd	r24, Z+1	; 0x01
    14d6:	68 2f       	mov	r22, r24
    14d8:	70 e0       	ldi	r23, 0x00	; 0
    14da:	61 1b       	sub	r22, r17
    14dc:	71 09       	sbc	r23, r1
    14de:	3f c0       	rjmp	.+126    	; 0x155e <__fpcmp_parts_f+0xac>
    14e0:	84 30       	cpi	r24, 0x04	; 4
    14e2:	21 f0       	breq	.+8      	; 0x14ec <__fpcmp_parts_f+0x3a>
    14e4:	92 30       	cpi	r25, 0x02	; 2
    14e6:	31 f4       	brne	.+12     	; 0x14f4 <__fpcmp_parts_f+0x42>
    14e8:	82 30       	cpi	r24, 0x02	; 2
    14ea:	b9 f1       	breq	.+110    	; 0x155a <__fpcmp_parts_f+0xa8>
    14ec:	81 81       	ldd	r24, Z+1	; 0x01
    14ee:	88 23       	and	r24, r24
    14f0:	89 f1       	breq	.+98     	; 0x1554 <__fpcmp_parts_f+0xa2>
    14f2:	2d c0       	rjmp	.+90     	; 0x154e <__fpcmp_parts_f+0x9c>
    14f4:	11 96       	adiw	r26, 0x01	; 1
    14f6:	1c 91       	ld	r17, X
    14f8:	11 97       	sbiw	r26, 0x01	; 1
    14fa:	82 30       	cpi	r24, 0x02	; 2
    14fc:	f1 f0       	breq	.+60     	; 0x153a <__fpcmp_parts_f+0x88>
    14fe:	81 81       	ldd	r24, Z+1	; 0x01
    1500:	18 17       	cp	r17, r24
    1502:	d9 f4       	brne	.+54     	; 0x153a <__fpcmp_parts_f+0x88>
    1504:	12 96       	adiw	r26, 0x02	; 2
    1506:	2d 91       	ld	r18, X+
    1508:	3c 91       	ld	r19, X
    150a:	13 97       	sbiw	r26, 0x03	; 3
    150c:	82 81       	ldd	r24, Z+2	; 0x02
    150e:	93 81       	ldd	r25, Z+3	; 0x03
    1510:	82 17       	cp	r24, r18
    1512:	93 07       	cpc	r25, r19
    1514:	94 f0       	brlt	.+36     	; 0x153a <__fpcmp_parts_f+0x88>
    1516:	28 17       	cp	r18, r24
    1518:	39 07       	cpc	r19, r25
    151a:	bc f0       	brlt	.+46     	; 0x154a <__fpcmp_parts_f+0x98>
    151c:	14 96       	adiw	r26, 0x04	; 4
    151e:	8d 91       	ld	r24, X+
    1520:	9d 91       	ld	r25, X+
    1522:	0d 90       	ld	r0, X+
    1524:	bc 91       	ld	r27, X
    1526:	a0 2d       	mov	r26, r0
    1528:	24 81       	ldd	r18, Z+4	; 0x04
    152a:	35 81       	ldd	r19, Z+5	; 0x05
    152c:	46 81       	ldd	r20, Z+6	; 0x06
    152e:	57 81       	ldd	r21, Z+7	; 0x07
    1530:	28 17       	cp	r18, r24
    1532:	39 07       	cpc	r19, r25
    1534:	4a 07       	cpc	r20, r26
    1536:	5b 07       	cpc	r21, r27
    1538:	18 f4       	brcc	.+6      	; 0x1540 <__fpcmp_parts_f+0x8e>
    153a:	11 23       	and	r17, r17
    153c:	41 f0       	breq	.+16     	; 0x154e <__fpcmp_parts_f+0x9c>
    153e:	0a c0       	rjmp	.+20     	; 0x1554 <__fpcmp_parts_f+0xa2>
    1540:	82 17       	cp	r24, r18
    1542:	93 07       	cpc	r25, r19
    1544:	a4 07       	cpc	r26, r20
    1546:	b5 07       	cpc	r27, r21
    1548:	40 f4       	brcc	.+16     	; 0x155a <__fpcmp_parts_f+0xa8>
    154a:	11 23       	and	r17, r17
    154c:	19 f0       	breq	.+6      	; 0x1554 <__fpcmp_parts_f+0xa2>
    154e:	61 e0       	ldi	r22, 0x01	; 1
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	05 c0       	rjmp	.+10     	; 0x155e <__fpcmp_parts_f+0xac>
    1554:	6f ef       	ldi	r22, 0xFF	; 255
    1556:	7f ef       	ldi	r23, 0xFF	; 255
    1558:	02 c0       	rjmp	.+4      	; 0x155e <__fpcmp_parts_f+0xac>
    155a:	60 e0       	ldi	r22, 0x00	; 0
    155c:	70 e0       	ldi	r23, 0x00	; 0
    155e:	cb 01       	movw	r24, r22
    1560:	1f 91       	pop	r17
    1562:	08 95       	ret

00001564 <__prologue_saves__>:
    1564:	2f 92       	push	r2
    1566:	3f 92       	push	r3
    1568:	4f 92       	push	r4
    156a:	5f 92       	push	r5
    156c:	6f 92       	push	r6
    156e:	7f 92       	push	r7
    1570:	8f 92       	push	r8
    1572:	9f 92       	push	r9
    1574:	af 92       	push	r10
    1576:	bf 92       	push	r11
    1578:	cf 92       	push	r12
    157a:	df 92       	push	r13
    157c:	ef 92       	push	r14
    157e:	ff 92       	push	r15
    1580:	0f 93       	push	r16
    1582:	1f 93       	push	r17
    1584:	cf 93       	push	r28
    1586:	df 93       	push	r29
    1588:	cd b7       	in	r28, 0x3d	; 61
    158a:	de b7       	in	r29, 0x3e	; 62
    158c:	ca 1b       	sub	r28, r26
    158e:	db 0b       	sbc	r29, r27
    1590:	0f b6       	in	r0, 0x3f	; 63
    1592:	f8 94       	cli
    1594:	de bf       	out	0x3e, r29	; 62
    1596:	0f be       	out	0x3f, r0	; 63
    1598:	cd bf       	out	0x3d, r28	; 61
    159a:	09 94       	ijmp

0000159c <__epilogue_restores__>:
    159c:	2a 88       	ldd	r2, Y+18	; 0x12
    159e:	39 88       	ldd	r3, Y+17	; 0x11
    15a0:	48 88       	ldd	r4, Y+16	; 0x10
    15a2:	5f 84       	ldd	r5, Y+15	; 0x0f
    15a4:	6e 84       	ldd	r6, Y+14	; 0x0e
    15a6:	7d 84       	ldd	r7, Y+13	; 0x0d
    15a8:	8c 84       	ldd	r8, Y+12	; 0x0c
    15aa:	9b 84       	ldd	r9, Y+11	; 0x0b
    15ac:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ae:	b9 84       	ldd	r11, Y+9	; 0x09
    15b0:	c8 84       	ldd	r12, Y+8	; 0x08
    15b2:	df 80       	ldd	r13, Y+7	; 0x07
    15b4:	ee 80       	ldd	r14, Y+6	; 0x06
    15b6:	fd 80       	ldd	r15, Y+5	; 0x05
    15b8:	0c 81       	ldd	r16, Y+4	; 0x04
    15ba:	1b 81       	ldd	r17, Y+3	; 0x03
    15bc:	aa 81       	ldd	r26, Y+2	; 0x02
    15be:	b9 81       	ldd	r27, Y+1	; 0x01
    15c0:	ce 0f       	add	r28, r30
    15c2:	d1 1d       	adc	r29, r1
    15c4:	0f b6       	in	r0, 0x3f	; 63
    15c6:	f8 94       	cli
    15c8:	de bf       	out	0x3e, r29	; 62
    15ca:	0f be       	out	0x3f, r0	; 63
    15cc:	cd bf       	out	0x3d, r28	; 61
    15ce:	ed 01       	movw	r28, r26
    15d0:	08 95       	ret

000015d2 <_exit>:
    15d2:	f8 94       	cli

000015d4 <__stop_program>:
    15d4:	ff cf       	rjmp	.-2      	; 0x15d4 <__stop_program>
