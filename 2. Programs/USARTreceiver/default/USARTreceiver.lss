
USARTreceiver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000000f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000094  00000000  00000000  0000010f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000057  00000000  00000000  000001a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000d4  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000095  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	23 c0       	rjmp	.+70     	; 0x7c <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#define F_CPU12000000UL;
#include<avr/io.h>
void main()
{DDRB=0b00011110;
  38:	8e e1       	ldi	r24, 0x1E	; 30
  3a:	87 bb       	out	0x17, r24	; 23
 UBRRL=77;
  3c:	8d e4       	ldi	r24, 0x4D	; 77
  3e:	89 b9       	out	0x09, r24	; 9
 UBRRH=0;
  40:	10 bc       	out	0x20, r1	; 32
 UCSRB|=0b00010000;
  42:	54 9a       	sbi	0x0a, 4	; 10
 UCSRC|=0b10000110;
  44:	80 b5       	in	r24, 0x20	; 32
  46:	86 68       	ori	r24, 0x86	; 134
  48:	80 bd       	out	0x20, r24	; 32
while(1)
{while(RXC==0);
 char data=UDR;
 if(data=='f'){PORTB=0b00010100;}
  4a:	44 e1       	ldi	r20, 0x14	; 20
 if(data=='b'){PORTB=0b00001010;}
 if(data=='r'){PORTB=0b00000100;}
 if(data=='l'){PORTB=0b00010000;}
  4c:	30 e1       	ldi	r19, 0x10	; 16
while(1)
{while(RXC==0);
 char data=UDR;
 if(data=='f'){PORTB=0b00010100;}
 if(data=='b'){PORTB=0b00001010;}
 if(data=='r'){PORTB=0b00000100;}
  4e:	24 e0       	ldi	r18, 0x04	; 4
 UCSRC|=0b10000110;
while(1)
{while(RXC==0);
 char data=UDR;
 if(data=='f'){PORTB=0b00010100;}
 if(data=='b'){PORTB=0b00001010;}
  50:	9a e0       	ldi	r25, 0x0A	; 10
 UBRRH=0;
 UCSRB|=0b00010000;
 UCSRC|=0b10000110;
while(1)
{while(RXC==0);
 char data=UDR;
  52:	8c b1       	in	r24, 0x0c	; 12
 if(data=='f'){PORTB=0b00010100;}
  54:	86 36       	cpi	r24, 0x66	; 102
  56:	11 f4       	brne	.+4      	; 0x5c <__SREG__+0x1d>
  58:	48 bb       	out	0x18, r20	; 24
  5a:	fb cf       	rjmp	.-10     	; 0x52 <__SREG__+0x13>
 if(data=='b'){PORTB=0b00001010;}
  5c:	82 36       	cpi	r24, 0x62	; 98
  5e:	11 f4       	brne	.+4      	; 0x64 <__SREG__+0x25>
  60:	98 bb       	out	0x18, r25	; 24
  62:	f7 cf       	rjmp	.-18     	; 0x52 <__SREG__+0x13>
 if(data=='r'){PORTB=0b00000100;}
  64:	82 37       	cpi	r24, 0x72	; 114
  66:	11 f4       	brne	.+4      	; 0x6c <__SREG__+0x2d>
  68:	28 bb       	out	0x18, r18	; 24
  6a:	f3 cf       	rjmp	.-26     	; 0x52 <__SREG__+0x13>
 if(data=='l'){PORTB=0b00010000;}
  6c:	8c 36       	cpi	r24, 0x6C	; 108
  6e:	11 f4       	brne	.+4      	; 0x74 <__SREG__+0x35>
  70:	38 bb       	out	0x18, r19	; 24
  72:	ef cf       	rjmp	.-34     	; 0x52 <__SREG__+0x13>
 if(data=='s'){PORTB=0b00000000;}
  74:	83 37       	cpi	r24, 0x73	; 115
  76:	69 f7       	brne	.-38     	; 0x52 <__SREG__+0x13>
  78:	18 ba       	out	0x18, r1	; 24
  7a:	eb cf       	rjmp	.-42     	; 0x52 <__SREG__+0x13>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>
